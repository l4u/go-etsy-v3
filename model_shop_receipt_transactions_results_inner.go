/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ShopReceiptTransactionsResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopReceiptTransactionsResultsInner{}

// ShopReceiptTransactionsResultsInner The ShopReceiptTransaction resources found.
type ShopReceiptTransactionsResultsInner struct {
	// The unique numeric ID for a transaction.
	TransactionId *int32 `json:"transaction_id,omitempty"`
	// The title string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.
	Title NullableString `json:"title,omitempty"`
	// The description string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.
	Description NullableString `json:"description,omitempty"`
	// The numeric user ID for the seller in this transaction.
	SellerUserId *int32 `json:"seller_user_id,omitempty"`
	// The numeric user ID for the buyer in this transaction.
	BuyerUserId *int32 `json:"buyer_user_id,omitempty"`
	// The transaction\\'s creation date and time, in epoch seconds.
	CreateTimestamp *int32 `json:"create_timestamp,omitempty"`
	// The transaction\\'s creation date and time, in epoch seconds.
	CreatedTimestamp *int32 `json:"created_timestamp,omitempty"`
	// The transaction\\'s paid date and time, in epoch seconds.
	PaidTimestamp NullableInt32 `json:"paid_timestamp,omitempty"`
	// The transaction\\'s shipping date and time, in epoch seconds.
	ShippedTimestamp NullableInt32 `json:"shipped_timestamp,omitempty"`
	// The numeric quantity of products purchased in this transaction.
	Quantity *int32 `json:"quantity,omitempty"`
	// The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
	ListingImageId NullableInt32 `json:"listing_image_id,omitempty"`
	// The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
	ReceiptId *int32 `json:"receipt_id,omitempty"`
	// When true, the transaction recorded the purchase of a digital listing.
	IsDigital *bool `json:"is_digital,omitempty"`
	// A string describing the files purchased in this transaction.
	FileData *string `json:"file_data,omitempty"`
	// The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
	ListingId NullableInt32 `json:"listing_id,omitempty"`
	// The type string for the transaction, usually \"listing\".
	TransactionType *string `json:"transaction_type,omitempty"`
	// The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product) purchased from a listing.
	ProductId NullableInt32 `json:"product_id,omitempty"`
	// The SKU string for the product
	Sku NullableString `json:"sku,omitempty"`
	Price *ShopReceiptTransactionPrice `json:"price,omitempty"`
	ShippingCost *ShopReceiptTransactionShippingCost `json:"shipping_cost,omitempty"`
	// Array of variations and personalizations the buyer chose.
	Variations []ShopReceiptTransactionVariationsInner `json:"variations,omitempty"`
	// A list of property value entries for this product. Note: parenthesis characters (`(` and `)`) are not allowed.
	ProductData []ListingInventoryProductPropertyValuesInner `json:"product_data,omitempty"`
	// The ID of the shipping profile selected for this listing.
	ShippingProfileId NullableInt32 `json:"shipping_profile_id,omitempty"`
	// The minimum number of days for processing the listing.
	MinProcessingDays NullableInt32 `json:"min_processing_days,omitempty"`
	// The maximum number of days for processing the listing.
	MaxProcessingDays NullableInt32 `json:"max_processing_days,omitempty"`
	// Name of the selected shipping method.
	ShippingMethod NullableString `json:"shipping_method,omitempty"`
	// The name of the shipping upgrade selected for this listing. Default value is null.
	ShippingUpgrade NullableString `json:"shipping_upgrade,omitempty"`
	// The date & time of the expected ship date, in epoch seconds.
	ExpectedShipDate NullableInt32 `json:"expected_ship_date,omitempty"`
	// The amount of the buyer coupon that was discounted in the shop's currency.
	BuyerCoupon *float32 `json:"buyer_coupon,omitempty"`
	// The amount of the shop coupon that was discounted in the shop's currency.
	ShopCoupon *float32 `json:"shop_coupon,omitempty"`
}

// NewShopReceiptTransactionsResultsInner instantiates a new ShopReceiptTransactionsResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopReceiptTransactionsResultsInner() *ShopReceiptTransactionsResultsInner {
	this := ShopReceiptTransactionsResultsInner{}
	var buyerCoupon float32 = 0
	this.BuyerCoupon = &buyerCoupon
	var shopCoupon float32 = 0
	this.ShopCoupon = &shopCoupon
	return &this
}

// NewShopReceiptTransactionsResultsInnerWithDefaults instantiates a new ShopReceiptTransactionsResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopReceiptTransactionsResultsInnerWithDefaults() *ShopReceiptTransactionsResultsInner {
	this := ShopReceiptTransactionsResultsInner{}
	var buyerCoupon float32 = 0
	this.BuyerCoupon = &buyerCoupon
	var shopCoupon float32 = 0
	this.ShopCoupon = &shopCoupon
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetTransactionId() int32 {
	if o == nil || IsNil(o.TransactionId) {
		var ret int32
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetTransactionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int32 and assigns it to the TransactionId field.
func (o *ShopReceiptTransactionsResultsInner) SetTransactionId(v int32) {
	o.TransactionId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *ShopReceiptTransactionsResultsInner) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ShopReceiptTransactionsResultsInner) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetDescription() {
	o.Description.Unset()
}

// GetSellerUserId returns the SellerUserId field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetSellerUserId() int32 {
	if o == nil || IsNil(o.SellerUserId) {
		var ret int32
		return ret
	}
	return *o.SellerUserId
}

// GetSellerUserIdOk returns a tuple with the SellerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetSellerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SellerUserId) {
		return nil, false
	}
	return o.SellerUserId, true
}

// HasSellerUserId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasSellerUserId() bool {
	if o != nil && !IsNil(o.SellerUserId) {
		return true
	}

	return false
}

// SetSellerUserId gets a reference to the given int32 and assigns it to the SellerUserId field.
func (o *ShopReceiptTransactionsResultsInner) SetSellerUserId(v int32) {
	o.SellerUserId = &v
}

// GetBuyerUserId returns the BuyerUserId field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetBuyerUserId() int32 {
	if o == nil || IsNil(o.BuyerUserId) {
		var ret int32
		return ret
	}
	return *o.BuyerUserId
}

// GetBuyerUserIdOk returns a tuple with the BuyerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetBuyerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BuyerUserId) {
		return nil, false
	}
	return o.BuyerUserId, true
}

// HasBuyerUserId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasBuyerUserId() bool {
	if o != nil && !IsNil(o.BuyerUserId) {
		return true
	}

	return false
}

// SetBuyerUserId gets a reference to the given int32 and assigns it to the BuyerUserId field.
func (o *ShopReceiptTransactionsResultsInner) SetBuyerUserId(v int32) {
	o.BuyerUserId = &v
}

// GetCreateTimestamp returns the CreateTimestamp field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetCreateTimestamp() int32 {
	if o == nil || IsNil(o.CreateTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreateTimestamp
}

// GetCreateTimestampOk returns a tuple with the CreateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetCreateTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateTimestamp) {
		return nil, false
	}
	return o.CreateTimestamp, true
}

// HasCreateTimestamp returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasCreateTimestamp() bool {
	if o != nil && !IsNil(o.CreateTimestamp) {
		return true
	}

	return false
}

// SetCreateTimestamp gets a reference to the given int32 and assigns it to the CreateTimestamp field.
func (o *ShopReceiptTransactionsResultsInner) SetCreateTimestamp(v int32) {
	o.CreateTimestamp = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetCreatedTimestamp() int32 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int32 and assigns it to the CreatedTimestamp field.
func (o *ShopReceiptTransactionsResultsInner) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = &v
}

// GetPaidTimestamp returns the PaidTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetPaidTimestamp() int32 {
	if o == nil || IsNil(o.PaidTimestamp.Get()) {
		var ret int32
		return ret
	}
	return *o.PaidTimestamp.Get()
}

// GetPaidTimestampOk returns a tuple with the PaidTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetPaidTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaidTimestamp.Get(), o.PaidTimestamp.IsSet()
}

// HasPaidTimestamp returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasPaidTimestamp() bool {
	if o != nil && o.PaidTimestamp.IsSet() {
		return true
	}

	return false
}

// SetPaidTimestamp gets a reference to the given NullableInt32 and assigns it to the PaidTimestamp field.
func (o *ShopReceiptTransactionsResultsInner) SetPaidTimestamp(v int32) {
	o.PaidTimestamp.Set(&v)
}
// SetPaidTimestampNil sets the value for PaidTimestamp to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetPaidTimestampNil() {
	o.PaidTimestamp.Set(nil)
}

// UnsetPaidTimestamp ensures that no value is present for PaidTimestamp, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetPaidTimestamp() {
	o.PaidTimestamp.Unset()
}

// GetShippedTimestamp returns the ShippedTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetShippedTimestamp() int32 {
	if o == nil || IsNil(o.ShippedTimestamp.Get()) {
		var ret int32
		return ret
	}
	return *o.ShippedTimestamp.Get()
}

// GetShippedTimestampOk returns a tuple with the ShippedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetShippedTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedTimestamp.Get(), o.ShippedTimestamp.IsSet()
}

// HasShippedTimestamp returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasShippedTimestamp() bool {
	if o != nil && o.ShippedTimestamp.IsSet() {
		return true
	}

	return false
}

// SetShippedTimestamp gets a reference to the given NullableInt32 and assigns it to the ShippedTimestamp field.
func (o *ShopReceiptTransactionsResultsInner) SetShippedTimestamp(v int32) {
	o.ShippedTimestamp.Set(&v)
}
// SetShippedTimestampNil sets the value for ShippedTimestamp to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetShippedTimestampNil() {
	o.ShippedTimestamp.Set(nil)
}

// UnsetShippedTimestamp ensures that no value is present for ShippedTimestamp, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetShippedTimestamp() {
	o.ShippedTimestamp.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ShopReceiptTransactionsResultsInner) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetListingImageId returns the ListingImageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetListingImageId() int32 {
	if o == nil || IsNil(o.ListingImageId.Get()) {
		var ret int32
		return ret
	}
	return *o.ListingImageId.Get()
}

// GetListingImageIdOk returns a tuple with the ListingImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetListingImageIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListingImageId.Get(), o.ListingImageId.IsSet()
}

// HasListingImageId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasListingImageId() bool {
	if o != nil && o.ListingImageId.IsSet() {
		return true
	}

	return false
}

// SetListingImageId gets a reference to the given NullableInt32 and assigns it to the ListingImageId field.
func (o *ShopReceiptTransactionsResultsInner) SetListingImageId(v int32) {
	o.ListingImageId.Set(&v)
}
// SetListingImageIdNil sets the value for ListingImageId to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetListingImageIdNil() {
	o.ListingImageId.Set(nil)
}

// UnsetListingImageId ensures that no value is present for ListingImageId, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetListingImageId() {
	o.ListingImageId.Unset()
}

// GetReceiptId returns the ReceiptId field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetReceiptId() int32 {
	if o == nil || IsNil(o.ReceiptId) {
		var ret int32
		return ret
	}
	return *o.ReceiptId
}

// GetReceiptIdOk returns a tuple with the ReceiptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetReceiptIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReceiptId) {
		return nil, false
	}
	return o.ReceiptId, true
}

// HasReceiptId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasReceiptId() bool {
	if o != nil && !IsNil(o.ReceiptId) {
		return true
	}

	return false
}

// SetReceiptId gets a reference to the given int32 and assigns it to the ReceiptId field.
func (o *ShopReceiptTransactionsResultsInner) SetReceiptId(v int32) {
	o.ReceiptId = &v
}

// GetIsDigital returns the IsDigital field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetIsDigital() bool {
	if o == nil || IsNil(o.IsDigital) {
		var ret bool
		return ret
	}
	return *o.IsDigital
}

// GetIsDigitalOk returns a tuple with the IsDigital field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetIsDigitalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDigital) {
		return nil, false
	}
	return o.IsDigital, true
}

// HasIsDigital returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasIsDigital() bool {
	if o != nil && !IsNil(o.IsDigital) {
		return true
	}

	return false
}

// SetIsDigital gets a reference to the given bool and assigns it to the IsDigital field.
func (o *ShopReceiptTransactionsResultsInner) SetIsDigital(v bool) {
	o.IsDigital = &v
}

// GetFileData returns the FileData field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetFileData() string {
	if o == nil || IsNil(o.FileData) {
		var ret string
		return ret
	}
	return *o.FileData
}

// GetFileDataOk returns a tuple with the FileData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetFileDataOk() (*string, bool) {
	if o == nil || IsNil(o.FileData) {
		return nil, false
	}
	return o.FileData, true
}

// HasFileData returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasFileData() bool {
	if o != nil && !IsNil(o.FileData) {
		return true
	}

	return false
}

// SetFileData gets a reference to the given string and assigns it to the FileData field.
func (o *ShopReceiptTransactionsResultsInner) SetFileData(v string) {
	o.FileData = &v
}

// GetListingId returns the ListingId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetListingId() int32 {
	if o == nil || IsNil(o.ListingId.Get()) {
		var ret int32
		return ret
	}
	return *o.ListingId.Get()
}

// GetListingIdOk returns a tuple with the ListingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetListingIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListingId.Get(), o.ListingId.IsSet()
}

// HasListingId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasListingId() bool {
	if o != nil && o.ListingId.IsSet() {
		return true
	}

	return false
}

// SetListingId gets a reference to the given NullableInt32 and assigns it to the ListingId field.
func (o *ShopReceiptTransactionsResultsInner) SetListingId(v int32) {
	o.ListingId.Set(&v)
}
// SetListingIdNil sets the value for ListingId to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetListingIdNil() {
	o.ListingId.Set(nil)
}

// UnsetListingId ensures that no value is present for ListingId, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetListingId() {
	o.ListingId.Unset()
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *ShopReceiptTransactionsResultsInner) SetTransactionType(v string) {
	o.TransactionType = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetProductIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableInt32 and assigns it to the ProductId field.
func (o *ShopReceiptTransactionsResultsInner) SetProductId(v int32) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetProductId() {
	o.ProductId.Unset()
}

// GetSku returns the Sku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetSku() string {
	if o == nil || IsNil(o.Sku.Get()) {
		var ret string
		return ret
	}
	return *o.Sku.Get()
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sku.Get(), o.Sku.IsSet()
}

// HasSku returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasSku() bool {
	if o != nil && o.Sku.IsSet() {
		return true
	}

	return false
}

// SetSku gets a reference to the given NullableString and assigns it to the Sku field.
func (o *ShopReceiptTransactionsResultsInner) SetSku(v string) {
	o.Sku.Set(&v)
}
// SetSkuNil sets the value for Sku to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetSkuNil() {
	o.Sku.Set(nil)
}

// UnsetSku ensures that no value is present for Sku, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetSku() {
	o.Sku.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetPrice() ShopReceiptTransactionPrice {
	if o == nil || IsNil(o.Price) {
		var ret ShopReceiptTransactionPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetPriceOk() (*ShopReceiptTransactionPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given ShopReceiptTransactionPrice and assigns it to the Price field.
func (o *ShopReceiptTransactionsResultsInner) SetPrice(v ShopReceiptTransactionPrice) {
	o.Price = &v
}

// GetShippingCost returns the ShippingCost field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetShippingCost() ShopReceiptTransactionShippingCost {
	if o == nil || IsNil(o.ShippingCost) {
		var ret ShopReceiptTransactionShippingCost
		return ret
	}
	return *o.ShippingCost
}

// GetShippingCostOk returns a tuple with the ShippingCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetShippingCostOk() (*ShopReceiptTransactionShippingCost, bool) {
	if o == nil || IsNil(o.ShippingCost) {
		return nil, false
	}
	return o.ShippingCost, true
}

// HasShippingCost returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasShippingCost() bool {
	if o != nil && !IsNil(o.ShippingCost) {
		return true
	}

	return false
}

// SetShippingCost gets a reference to the given ShopReceiptTransactionShippingCost and assigns it to the ShippingCost field.
func (o *ShopReceiptTransactionsResultsInner) SetShippingCost(v ShopReceiptTransactionShippingCost) {
	o.ShippingCost = &v
}

// GetVariations returns the Variations field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetVariations() []ShopReceiptTransactionVariationsInner {
	if o == nil || IsNil(o.Variations) {
		var ret []ShopReceiptTransactionVariationsInner
		return ret
	}
	return o.Variations
}

// GetVariationsOk returns a tuple with the Variations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetVariationsOk() ([]ShopReceiptTransactionVariationsInner, bool) {
	if o == nil || IsNil(o.Variations) {
		return nil, false
	}
	return o.Variations, true
}

// HasVariations returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasVariations() bool {
	if o != nil && !IsNil(o.Variations) {
		return true
	}

	return false
}

// SetVariations gets a reference to the given []ShopReceiptTransactionVariationsInner and assigns it to the Variations field.
func (o *ShopReceiptTransactionsResultsInner) SetVariations(v []ShopReceiptTransactionVariationsInner) {
	o.Variations = v
}

// GetProductData returns the ProductData field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetProductData() []ListingInventoryProductPropertyValuesInner {
	if o == nil || IsNil(o.ProductData) {
		var ret []ListingInventoryProductPropertyValuesInner
		return ret
	}
	return o.ProductData
}

// GetProductDataOk returns a tuple with the ProductData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetProductDataOk() ([]ListingInventoryProductPropertyValuesInner, bool) {
	if o == nil || IsNil(o.ProductData) {
		return nil, false
	}
	return o.ProductData, true
}

// HasProductData returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasProductData() bool {
	if o != nil && !IsNil(o.ProductData) {
		return true
	}

	return false
}

// SetProductData gets a reference to the given []ListingInventoryProductPropertyValuesInner and assigns it to the ProductData field.
func (o *ShopReceiptTransactionsResultsInner) SetProductData(v []ListingInventoryProductPropertyValuesInner) {
	o.ProductData = v
}

// GetShippingProfileId returns the ShippingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetShippingProfileId() int32 {
	if o == nil || IsNil(o.ShippingProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.ShippingProfileId.Get()
}

// GetShippingProfileIdOk returns a tuple with the ShippingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetShippingProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingProfileId.Get(), o.ShippingProfileId.IsSet()
}

// HasShippingProfileId returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasShippingProfileId() bool {
	if o != nil && o.ShippingProfileId.IsSet() {
		return true
	}

	return false
}

// SetShippingProfileId gets a reference to the given NullableInt32 and assigns it to the ShippingProfileId field.
func (o *ShopReceiptTransactionsResultsInner) SetShippingProfileId(v int32) {
	o.ShippingProfileId.Set(&v)
}
// SetShippingProfileIdNil sets the value for ShippingProfileId to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetShippingProfileIdNil() {
	o.ShippingProfileId.Set(nil)
}

// UnsetShippingProfileId ensures that no value is present for ShippingProfileId, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetShippingProfileId() {
	o.ShippingProfileId.Unset()
}

// GetMinProcessingDays returns the MinProcessingDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetMinProcessingDays() int32 {
	if o == nil || IsNil(o.MinProcessingDays.Get()) {
		var ret int32
		return ret
	}
	return *o.MinProcessingDays.Get()
}

// GetMinProcessingDaysOk returns a tuple with the MinProcessingDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetMinProcessingDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinProcessingDays.Get(), o.MinProcessingDays.IsSet()
}

// HasMinProcessingDays returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasMinProcessingDays() bool {
	if o != nil && o.MinProcessingDays.IsSet() {
		return true
	}

	return false
}

// SetMinProcessingDays gets a reference to the given NullableInt32 and assigns it to the MinProcessingDays field.
func (o *ShopReceiptTransactionsResultsInner) SetMinProcessingDays(v int32) {
	o.MinProcessingDays.Set(&v)
}
// SetMinProcessingDaysNil sets the value for MinProcessingDays to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetMinProcessingDaysNil() {
	o.MinProcessingDays.Set(nil)
}

// UnsetMinProcessingDays ensures that no value is present for MinProcessingDays, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetMinProcessingDays() {
	o.MinProcessingDays.Unset()
}

// GetMaxProcessingDays returns the MaxProcessingDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetMaxProcessingDays() int32 {
	if o == nil || IsNil(o.MaxProcessingDays.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxProcessingDays.Get()
}

// GetMaxProcessingDaysOk returns a tuple with the MaxProcessingDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetMaxProcessingDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxProcessingDays.Get(), o.MaxProcessingDays.IsSet()
}

// HasMaxProcessingDays returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasMaxProcessingDays() bool {
	if o != nil && o.MaxProcessingDays.IsSet() {
		return true
	}

	return false
}

// SetMaxProcessingDays gets a reference to the given NullableInt32 and assigns it to the MaxProcessingDays field.
func (o *ShopReceiptTransactionsResultsInner) SetMaxProcessingDays(v int32) {
	o.MaxProcessingDays.Set(&v)
}
// SetMaxProcessingDaysNil sets the value for MaxProcessingDays to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetMaxProcessingDaysNil() {
	o.MaxProcessingDays.Set(nil)
}

// UnsetMaxProcessingDays ensures that no value is present for MaxProcessingDays, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetMaxProcessingDays() {
	o.MaxProcessingDays.Unset()
}

// GetShippingMethod returns the ShippingMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetShippingMethod() string {
	if o == nil || IsNil(o.ShippingMethod.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingMethod.Get()
}

// GetShippingMethodOk returns a tuple with the ShippingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetShippingMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingMethod.Get(), o.ShippingMethod.IsSet()
}

// HasShippingMethod returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasShippingMethod() bool {
	if o != nil && o.ShippingMethod.IsSet() {
		return true
	}

	return false
}

// SetShippingMethod gets a reference to the given NullableString and assigns it to the ShippingMethod field.
func (o *ShopReceiptTransactionsResultsInner) SetShippingMethod(v string) {
	o.ShippingMethod.Set(&v)
}
// SetShippingMethodNil sets the value for ShippingMethod to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetShippingMethodNil() {
	o.ShippingMethod.Set(nil)
}

// UnsetShippingMethod ensures that no value is present for ShippingMethod, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetShippingMethod() {
	o.ShippingMethod.Unset()
}

// GetShippingUpgrade returns the ShippingUpgrade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetShippingUpgrade() string {
	if o == nil || IsNil(o.ShippingUpgrade.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingUpgrade.Get()
}

// GetShippingUpgradeOk returns a tuple with the ShippingUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetShippingUpgradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingUpgrade.Get(), o.ShippingUpgrade.IsSet()
}

// HasShippingUpgrade returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasShippingUpgrade() bool {
	if o != nil && o.ShippingUpgrade.IsSet() {
		return true
	}

	return false
}

// SetShippingUpgrade gets a reference to the given NullableString and assigns it to the ShippingUpgrade field.
func (o *ShopReceiptTransactionsResultsInner) SetShippingUpgrade(v string) {
	o.ShippingUpgrade.Set(&v)
}
// SetShippingUpgradeNil sets the value for ShippingUpgrade to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetShippingUpgradeNil() {
	o.ShippingUpgrade.Set(nil)
}

// UnsetShippingUpgrade ensures that no value is present for ShippingUpgrade, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetShippingUpgrade() {
	o.ShippingUpgrade.Unset()
}

// GetExpectedShipDate returns the ExpectedShipDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptTransactionsResultsInner) GetExpectedShipDate() int32 {
	if o == nil || IsNil(o.ExpectedShipDate.Get()) {
		var ret int32
		return ret
	}
	return *o.ExpectedShipDate.Get()
}

// GetExpectedShipDateOk returns a tuple with the ExpectedShipDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptTransactionsResultsInner) GetExpectedShipDateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectedShipDate.Get(), o.ExpectedShipDate.IsSet()
}

// HasExpectedShipDate returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasExpectedShipDate() bool {
	if o != nil && o.ExpectedShipDate.IsSet() {
		return true
	}

	return false
}

// SetExpectedShipDate gets a reference to the given NullableInt32 and assigns it to the ExpectedShipDate field.
func (o *ShopReceiptTransactionsResultsInner) SetExpectedShipDate(v int32) {
	o.ExpectedShipDate.Set(&v)
}
// SetExpectedShipDateNil sets the value for ExpectedShipDate to be an explicit nil
func (o *ShopReceiptTransactionsResultsInner) SetExpectedShipDateNil() {
	o.ExpectedShipDate.Set(nil)
}

// UnsetExpectedShipDate ensures that no value is present for ExpectedShipDate, not even an explicit nil
func (o *ShopReceiptTransactionsResultsInner) UnsetExpectedShipDate() {
	o.ExpectedShipDate.Unset()
}

// GetBuyerCoupon returns the BuyerCoupon field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetBuyerCoupon() float32 {
	if o == nil || IsNil(o.BuyerCoupon) {
		var ret float32
		return ret
	}
	return *o.BuyerCoupon
}

// GetBuyerCouponOk returns a tuple with the BuyerCoupon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetBuyerCouponOk() (*float32, bool) {
	if o == nil || IsNil(o.BuyerCoupon) {
		return nil, false
	}
	return o.BuyerCoupon, true
}

// HasBuyerCoupon returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasBuyerCoupon() bool {
	if o != nil && !IsNil(o.BuyerCoupon) {
		return true
	}

	return false
}

// SetBuyerCoupon gets a reference to the given float32 and assigns it to the BuyerCoupon field.
func (o *ShopReceiptTransactionsResultsInner) SetBuyerCoupon(v float32) {
	o.BuyerCoupon = &v
}

// GetShopCoupon returns the ShopCoupon field value if set, zero value otherwise.
func (o *ShopReceiptTransactionsResultsInner) GetShopCoupon() float32 {
	if o == nil || IsNil(o.ShopCoupon) {
		var ret float32
		return ret
	}
	return *o.ShopCoupon
}

// GetShopCouponOk returns a tuple with the ShopCoupon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptTransactionsResultsInner) GetShopCouponOk() (*float32, bool) {
	if o == nil || IsNil(o.ShopCoupon) {
		return nil, false
	}
	return o.ShopCoupon, true
}

// HasShopCoupon returns a boolean if a field has been set.
func (o *ShopReceiptTransactionsResultsInner) HasShopCoupon() bool {
	if o != nil && !IsNil(o.ShopCoupon) {
		return true
	}

	return false
}

// SetShopCoupon gets a reference to the given float32 and assigns it to the ShopCoupon field.
func (o *ShopReceiptTransactionsResultsInner) SetShopCoupon(v float32) {
	o.ShopCoupon = &v
}

func (o ShopReceiptTransactionsResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopReceiptTransactionsResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.SellerUserId) {
		toSerialize["seller_user_id"] = o.SellerUserId
	}
	if !IsNil(o.BuyerUserId) {
		toSerialize["buyer_user_id"] = o.BuyerUserId
	}
	if !IsNil(o.CreateTimestamp) {
		toSerialize["create_timestamp"] = o.CreateTimestamp
	}
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if o.PaidTimestamp.IsSet() {
		toSerialize["paid_timestamp"] = o.PaidTimestamp.Get()
	}
	if o.ShippedTimestamp.IsSet() {
		toSerialize["shipped_timestamp"] = o.ShippedTimestamp.Get()
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if o.ListingImageId.IsSet() {
		toSerialize["listing_image_id"] = o.ListingImageId.Get()
	}
	if !IsNil(o.ReceiptId) {
		toSerialize["receipt_id"] = o.ReceiptId
	}
	if !IsNil(o.IsDigital) {
		toSerialize["is_digital"] = o.IsDigital
	}
	if !IsNil(o.FileData) {
		toSerialize["file_data"] = o.FileData
	}
	if o.ListingId.IsSet() {
		toSerialize["listing_id"] = o.ListingId.Get()
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transaction_type"] = o.TransactionType
	}
	if o.ProductId.IsSet() {
		toSerialize["product_id"] = o.ProductId.Get()
	}
	if o.Sku.IsSet() {
		toSerialize["sku"] = o.Sku.Get()
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.ShippingCost) {
		toSerialize["shipping_cost"] = o.ShippingCost
	}
	if !IsNil(o.Variations) {
		toSerialize["variations"] = o.Variations
	}
	if !IsNil(o.ProductData) {
		toSerialize["product_data"] = o.ProductData
	}
	if o.ShippingProfileId.IsSet() {
		toSerialize["shipping_profile_id"] = o.ShippingProfileId.Get()
	}
	if o.MinProcessingDays.IsSet() {
		toSerialize["min_processing_days"] = o.MinProcessingDays.Get()
	}
	if o.MaxProcessingDays.IsSet() {
		toSerialize["max_processing_days"] = o.MaxProcessingDays.Get()
	}
	if o.ShippingMethod.IsSet() {
		toSerialize["shipping_method"] = o.ShippingMethod.Get()
	}
	if o.ShippingUpgrade.IsSet() {
		toSerialize["shipping_upgrade"] = o.ShippingUpgrade.Get()
	}
	if o.ExpectedShipDate.IsSet() {
		toSerialize["expected_ship_date"] = o.ExpectedShipDate.Get()
	}
	if !IsNil(o.BuyerCoupon) {
		toSerialize["buyer_coupon"] = o.BuyerCoupon
	}
	if !IsNil(o.ShopCoupon) {
		toSerialize["shop_coupon"] = o.ShopCoupon
	}
	return toSerialize, nil
}

type NullableShopReceiptTransactionsResultsInner struct {
	value *ShopReceiptTransactionsResultsInner
	isSet bool
}

func (v NullableShopReceiptTransactionsResultsInner) Get() *ShopReceiptTransactionsResultsInner {
	return v.value
}

func (v *NullableShopReceiptTransactionsResultsInner) Set(val *ShopReceiptTransactionsResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableShopReceiptTransactionsResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableShopReceiptTransactionsResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopReceiptTransactionsResultsInner(val *ShopReceiptTransactionsResultsInner) *NullableShopReceiptTransactionsResultsInner {
	return &NullableShopReceiptTransactionsResultsInner{value: val, isSet: true}
}

func (v NullableShopReceiptTransactionsResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopReceiptTransactionsResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


