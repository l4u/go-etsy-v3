/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ShopListingWithAssociationsUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopListingWithAssociationsUser{}

// ShopListingWithAssociationsUser Represents a single user of the site
type ShopListingWithAssociationsUser struct {
	// The numeric ID of a user. This number is also a valid shop ID for the user\\'s shop.
	UserId *int32 `json:"user_id,omitempty"`
	// An email address string for the user\\'s primary email address.
	PrimaryEmail NullableString `json:"primary_email,omitempty"`
	// The user\\'s first name.
	FirstName NullableString `json:"first_name,omitempty"`
	// The user\\'s last name.
	LastName NullableString `json:"last_name,omitempty"`
	// The user\\'s avatar URL.
	ImageUrl75x75 NullableString `json:"image_url_75x75,omitempty"`
}

// NewShopListingWithAssociationsUser instantiates a new ShopListingWithAssociationsUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopListingWithAssociationsUser() *ShopListingWithAssociationsUser {
	this := ShopListingWithAssociationsUser{}
	return &this
}

// NewShopListingWithAssociationsUserWithDefaults instantiates a new ShopListingWithAssociationsUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopListingWithAssociationsUserWithDefaults() *ShopListingWithAssociationsUser {
	this := ShopListingWithAssociationsUser{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ShopListingWithAssociationsUser) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopListingWithAssociationsUser) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ShopListingWithAssociationsUser) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ShopListingWithAssociationsUser) SetUserId(v int32) {
	o.UserId = &v
}

// GetPrimaryEmail returns the PrimaryEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopListingWithAssociationsUser) GetPrimaryEmail() string {
	if o == nil || IsNil(o.PrimaryEmail.Get()) {
		var ret string
		return ret
	}
	return *o.PrimaryEmail.Get()
}

// GetPrimaryEmailOk returns a tuple with the PrimaryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopListingWithAssociationsUser) GetPrimaryEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryEmail.Get(), o.PrimaryEmail.IsSet()
}

// HasPrimaryEmail returns a boolean if a field has been set.
func (o *ShopListingWithAssociationsUser) HasPrimaryEmail() bool {
	if o != nil && o.PrimaryEmail.IsSet() {
		return true
	}

	return false
}

// SetPrimaryEmail gets a reference to the given NullableString and assigns it to the PrimaryEmail field.
func (o *ShopListingWithAssociationsUser) SetPrimaryEmail(v string) {
	o.PrimaryEmail.Set(&v)
}
// SetPrimaryEmailNil sets the value for PrimaryEmail to be an explicit nil
func (o *ShopListingWithAssociationsUser) SetPrimaryEmailNil() {
	o.PrimaryEmail.Set(nil)
}

// UnsetPrimaryEmail ensures that no value is present for PrimaryEmail, not even an explicit nil
func (o *ShopListingWithAssociationsUser) UnsetPrimaryEmail() {
	o.PrimaryEmail.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopListingWithAssociationsUser) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopListingWithAssociationsUser) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *ShopListingWithAssociationsUser) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *ShopListingWithAssociationsUser) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *ShopListingWithAssociationsUser) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *ShopListingWithAssociationsUser) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopListingWithAssociationsUser) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopListingWithAssociationsUser) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *ShopListingWithAssociationsUser) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *ShopListingWithAssociationsUser) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *ShopListingWithAssociationsUser) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *ShopListingWithAssociationsUser) UnsetLastName() {
	o.LastName.Unset()
}

// GetImageUrl75x75 returns the ImageUrl75x75 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopListingWithAssociationsUser) GetImageUrl75x75() string {
	if o == nil || IsNil(o.ImageUrl75x75.Get()) {
		var ret string
		return ret
	}
	return *o.ImageUrl75x75.Get()
}

// GetImageUrl75x75Ok returns a tuple with the ImageUrl75x75 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopListingWithAssociationsUser) GetImageUrl75x75Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageUrl75x75.Get(), o.ImageUrl75x75.IsSet()
}

// HasImageUrl75x75 returns a boolean if a field has been set.
func (o *ShopListingWithAssociationsUser) HasImageUrl75x75() bool {
	if o != nil && o.ImageUrl75x75.IsSet() {
		return true
	}

	return false
}

// SetImageUrl75x75 gets a reference to the given NullableString and assigns it to the ImageUrl75x75 field.
func (o *ShopListingWithAssociationsUser) SetImageUrl75x75(v string) {
	o.ImageUrl75x75.Set(&v)
}
// SetImageUrl75x75Nil sets the value for ImageUrl75x75 to be an explicit nil
func (o *ShopListingWithAssociationsUser) SetImageUrl75x75Nil() {
	o.ImageUrl75x75.Set(nil)
}

// UnsetImageUrl75x75 ensures that no value is present for ImageUrl75x75, not even an explicit nil
func (o *ShopListingWithAssociationsUser) UnsetImageUrl75x75() {
	o.ImageUrl75x75.Unset()
}

func (o ShopListingWithAssociationsUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopListingWithAssociationsUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if o.PrimaryEmail.IsSet() {
		toSerialize["primary_email"] = o.PrimaryEmail.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["first_name"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["last_name"] = o.LastName.Get()
	}
	if o.ImageUrl75x75.IsSet() {
		toSerialize["image_url_75x75"] = o.ImageUrl75x75.Get()
	}
	return toSerialize, nil
}

type NullableShopListingWithAssociationsUser struct {
	value *ShopListingWithAssociationsUser
	isSet bool
}

func (v NullableShopListingWithAssociationsUser) Get() *ShopListingWithAssociationsUser {
	return v.value
}

func (v *NullableShopListingWithAssociationsUser) Set(val *ShopListingWithAssociationsUser) {
	v.value = val
	v.isSet = true
}

func (v NullableShopListingWithAssociationsUser) IsSet() bool {
	return v.isSet
}

func (v *NullableShopListingWithAssociationsUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopListingWithAssociationsUser(val *ShopListingWithAssociationsUser) *NullableShopListingWithAssociationsUser {
	return &NullableShopListingWithAssociationsUser{value: val, isSet: true}
}

func (v NullableShopListingWithAssociationsUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopListingWithAssociationsUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


