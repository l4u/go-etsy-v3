/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Shop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Shop{}

// Shop A shop created by an Etsy user.
type Shop struct {
	// The unique positive non-zero numeric ID for an Etsy Shop.
	ShopId *int32 `json:"shop_id,omitempty"`
	// The numeric user ID of the [user](/documentation/reference#tag/User) who owns this shop.
	UserId *int32 `json:"user_id,omitempty"`
	// The shop's name string.
	ShopName *string `json:"shop_name,omitempty"`
	// The date and time this shop was created, in epoch seconds.
	CreateDate *int32 `json:"create_date,omitempty"`
	// The date and time this shop was created, in epoch seconds.
	CreatedTimestamp *int32 `json:"created_timestamp,omitempty"`
	// A brief heading string for the shop\\'s main page.
	Title NullableString `json:"title,omitempty"`
	// An announcement string to buyers that displays on the shop's homepage.
	Announcement NullableString `json:"announcement,omitempty"`
	// The ISO (alphabetic) code for the shop's currency. The shop displays all prices in this currency by default.
	CurrencyCode *string `json:"currency_code,omitempty"`
	// When true, this shop is not accepting purchases.
	IsVacation *bool `json:"is_vacation,omitempty"`
	// The shop's message string displayed when `is_vacation` is true.
	VacationMessage NullableString `json:"vacation_message,omitempty"`
	// A message string sent to users who complete a purchase from this shop.
	SaleMessage NullableString `json:"sale_message,omitempty"`
	// A message string sent to users who purchase a digital item from this shop.
	DigitalSaleMessage NullableString `json:"digital_sale_message,omitempty"`
	// The date and time of the last update to the shop, in epoch seconds.
	UpdateDate *int32 `json:"update_date,omitempty"`
	// The date and time of the last update to the shop, in epoch seconds.
	UpdatedTimestamp *int32 `json:"updated_timestamp,omitempty"`
	// The number of active listings in the shop.
	ListingActiveCount *int32 `json:"listing_active_count,omitempty"`
	// The number of digital listings in the shop.
	DigitalListingCount *int32 `json:"digital_listing_count,omitempty"`
	// The shop owner\\'s login name string.
	LoginName *string `json:"login_name,omitempty"`
	// When true, the shop accepts customization requests.
	AcceptsCustomRequests *bool `json:"accepts_custom_requests,omitempty"`
	// The shop's policy welcome string (may be blank).
	PolicyWelcome NullableString `json:"policy_welcome,omitempty"`
	// The shop's payment policy string (may be blank).
	PolicyPayment NullableString `json:"policy_payment,omitempty"`
	// The shop's shipping policy string (may be blank).
	PolicyShipping NullableString `json:"policy_shipping,omitempty"`
	// The shop's refund policy string (may be blank).
	PolicyRefunds NullableString `json:"policy_refunds,omitempty"`
	// The shop's additional policies string (may be blank).
	PolicyAdditional NullableString `json:"policy_additional,omitempty"`
	// The shop's seller information string (may be blank).
	PolicySellerInfo NullableString `json:"policy_seller_info,omitempty"`
	// The date and time of the last update to the shop's policies, in epoch seconds.
	PolicyUpdateDate *int32 `json:"policy_update_date,omitempty"`
	// When true, EU receipts display private info.
	PolicyHasPrivateReceiptInfo *bool `json:"policy_has_private_receipt_info,omitempty"`
	// When true, the shop displays additional unstructured policy fields.
	HasUnstructuredPolicies *bool `json:"has_unstructured_policies,omitempty"`
	// The shop's privacy policy string (may be blank).
	PolicyPrivacy NullableString `json:"policy_privacy,omitempty"`
	// The shop's automatic reply string displayed in new conversations when `is_vacation` is true.
	VacationAutoreply NullableString `json:"vacation_autoreply,omitempty"`
	// The URL string for this shop.
	Url *string `json:"url,omitempty"`
	// The URL string for this shop's banner image.
	ImageUrl760x100 NullableString `json:"image_url_760x100,omitempty"`
	// The number of users who marked this shop a favorite.
	NumFavorers *int32 `json:"num_favorers,omitempty"`
	// A list of language strings for the shop's enrolled languages where the default shop language is the first element in the array.
	Languages []string `json:"languages,omitempty"`
	// The URL string for this shop's icon image.
	IconUrlFullxfull NullableString `json:"icon_url_fullxfull,omitempty"`
	// When true, the shop accepted using structured policies.
	IsUsingStructuredPolicies *bool `json:"is_using_structured_policies,omitempty"`
	// When true, the shop accepted OR declined after viewing structured policies onboarding.
	HasOnboardedStructuredPolicies *bool `json:"has_onboarded_structured_policies,omitempty"`
	// When true, this shop\\'s policies include a link to an EU online dispute form.
	IncludeDisputeFormLink *bool `json:"include_dispute_form_link,omitempty"`
	// (**DEPRECATED: Replaced by _is_etsy_payments_onboarded_.) When true, the shop has onboarded onto Etsy Payments.
	IsDirectCheckoutOnboarded *bool `json:"is_direct_checkout_onboarded,omitempty"`
	// When true, the shop has onboarded onto Etsy Payments.
	IsEtsyPaymentsOnboarded *bool `json:"is_etsy_payments_onboarded,omitempty"`
	// When true, the shop is eligible for calculated shipping profiles. (Only available in the US and Canada)
	IsCalculatedEligible *bool `json:"is_calculated_eligible,omitempty"`
	// When true, the shop opted in to buyer promise.
	IsOptedInToBuyerPromise *bool `json:"is_opted_in_to_buyer_promise,omitempty"`
	// When true, the shop is based in the US.
	IsShopUsBased *bool `json:"is_shop_us_based,omitempty"`
	// The total number of sales ([transactions](/documentation/reference#tag/Shop-Receipt-Transactions)) for this shop.
	TransactionSoldCount *int32 `json:"transaction_sold_count,omitempty"`
	// The country iso the shop is shipping from.
	ShippingFromCountryIso NullableString `json:"shipping_from_country_iso,omitempty"`
	// The country iso where the shop is located.
	ShopLocationCountryIso NullableString `json:"shop_location_country_iso,omitempty"`
	// Number of reviews of shop listings in the past year.
	ReviewCount NullableInt32 `json:"review_count,omitempty"`
	// Average rating based on reviews of shop listings in the past year.
	ReviewAverage NullableFloat32 `json:"review_average,omitempty"`
}

// NewShop instantiates a new Shop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShop() *Shop {
	this := Shop{}
	return &this
}

// NewShopWithDefaults instantiates a new Shop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopWithDefaults() *Shop {
	this := Shop{}
	return &this
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *Shop) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *Shop) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *Shop) SetShopId(v int32) {
	o.ShopId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Shop) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Shop) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *Shop) SetUserId(v int32) {
	o.UserId = &v
}

// GetShopName returns the ShopName field value if set, zero value otherwise.
func (o *Shop) GetShopName() string {
	if o == nil || IsNil(o.ShopName) {
		var ret string
		return ret
	}
	return *o.ShopName
}

// GetShopNameOk returns a tuple with the ShopName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetShopNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShopName) {
		return nil, false
	}
	return o.ShopName, true
}

// HasShopName returns a boolean if a field has been set.
func (o *Shop) HasShopName() bool {
	if o != nil && !IsNil(o.ShopName) {
		return true
	}

	return false
}

// SetShopName gets a reference to the given string and assigns it to the ShopName field.
func (o *Shop) SetShopName(v string) {
	o.ShopName = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *Shop) GetCreateDate() int32 {
	if o == nil || IsNil(o.CreateDate) {
		var ret int32
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetCreateDateOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *Shop) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given int32 and assigns it to the CreateDate field.
func (o *Shop) SetCreateDate(v int32) {
	o.CreateDate = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *Shop) GetCreatedTimestamp() int32 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *Shop) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int32 and assigns it to the CreatedTimestamp field.
func (o *Shop) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *Shop) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *Shop) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *Shop) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *Shop) UnsetTitle() {
	o.Title.Unset()
}

// GetAnnouncement returns the Announcement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetAnnouncement() string {
	if o == nil || IsNil(o.Announcement.Get()) {
		var ret string
		return ret
	}
	return *o.Announcement.Get()
}

// GetAnnouncementOk returns a tuple with the Announcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetAnnouncementOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Announcement.Get(), o.Announcement.IsSet()
}

// HasAnnouncement returns a boolean if a field has been set.
func (o *Shop) HasAnnouncement() bool {
	if o != nil && o.Announcement.IsSet() {
		return true
	}

	return false
}

// SetAnnouncement gets a reference to the given NullableString and assigns it to the Announcement field.
func (o *Shop) SetAnnouncement(v string) {
	o.Announcement.Set(&v)
}
// SetAnnouncementNil sets the value for Announcement to be an explicit nil
func (o *Shop) SetAnnouncementNil() {
	o.Announcement.Set(nil)
}

// UnsetAnnouncement ensures that no value is present for Announcement, not even an explicit nil
func (o *Shop) UnsetAnnouncement() {
	o.Announcement.Unset()
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *Shop) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *Shop) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *Shop) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetIsVacation returns the IsVacation field value if set, zero value otherwise.
func (o *Shop) GetIsVacation() bool {
	if o == nil || IsNil(o.IsVacation) {
		var ret bool
		return ret
	}
	return *o.IsVacation
}

// GetIsVacationOk returns a tuple with the IsVacation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIsVacationOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVacation) {
		return nil, false
	}
	return o.IsVacation, true
}

// HasIsVacation returns a boolean if a field has been set.
func (o *Shop) HasIsVacation() bool {
	if o != nil && !IsNil(o.IsVacation) {
		return true
	}

	return false
}

// SetIsVacation gets a reference to the given bool and assigns it to the IsVacation field.
func (o *Shop) SetIsVacation(v bool) {
	o.IsVacation = &v
}

// GetVacationMessage returns the VacationMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetVacationMessage() string {
	if o == nil || IsNil(o.VacationMessage.Get()) {
		var ret string
		return ret
	}
	return *o.VacationMessage.Get()
}

// GetVacationMessageOk returns a tuple with the VacationMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetVacationMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VacationMessage.Get(), o.VacationMessage.IsSet()
}

// HasVacationMessage returns a boolean if a field has been set.
func (o *Shop) HasVacationMessage() bool {
	if o != nil && o.VacationMessage.IsSet() {
		return true
	}

	return false
}

// SetVacationMessage gets a reference to the given NullableString and assigns it to the VacationMessage field.
func (o *Shop) SetVacationMessage(v string) {
	o.VacationMessage.Set(&v)
}
// SetVacationMessageNil sets the value for VacationMessage to be an explicit nil
func (o *Shop) SetVacationMessageNil() {
	o.VacationMessage.Set(nil)
}

// UnsetVacationMessage ensures that no value is present for VacationMessage, not even an explicit nil
func (o *Shop) UnsetVacationMessage() {
	o.VacationMessage.Unset()
}

// GetSaleMessage returns the SaleMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetSaleMessage() string {
	if o == nil || IsNil(o.SaleMessage.Get()) {
		var ret string
		return ret
	}
	return *o.SaleMessage.Get()
}

// GetSaleMessageOk returns a tuple with the SaleMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetSaleMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SaleMessage.Get(), o.SaleMessage.IsSet()
}

// HasSaleMessage returns a boolean if a field has been set.
func (o *Shop) HasSaleMessage() bool {
	if o != nil && o.SaleMessage.IsSet() {
		return true
	}

	return false
}

// SetSaleMessage gets a reference to the given NullableString and assigns it to the SaleMessage field.
func (o *Shop) SetSaleMessage(v string) {
	o.SaleMessage.Set(&v)
}
// SetSaleMessageNil sets the value for SaleMessage to be an explicit nil
func (o *Shop) SetSaleMessageNil() {
	o.SaleMessage.Set(nil)
}

// UnsetSaleMessage ensures that no value is present for SaleMessage, not even an explicit nil
func (o *Shop) UnsetSaleMessage() {
	o.SaleMessage.Unset()
}

// GetDigitalSaleMessage returns the DigitalSaleMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetDigitalSaleMessage() string {
	if o == nil || IsNil(o.DigitalSaleMessage.Get()) {
		var ret string
		return ret
	}
	return *o.DigitalSaleMessage.Get()
}

// GetDigitalSaleMessageOk returns a tuple with the DigitalSaleMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetDigitalSaleMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DigitalSaleMessage.Get(), o.DigitalSaleMessage.IsSet()
}

// HasDigitalSaleMessage returns a boolean if a field has been set.
func (o *Shop) HasDigitalSaleMessage() bool {
	if o != nil && o.DigitalSaleMessage.IsSet() {
		return true
	}

	return false
}

// SetDigitalSaleMessage gets a reference to the given NullableString and assigns it to the DigitalSaleMessage field.
func (o *Shop) SetDigitalSaleMessage(v string) {
	o.DigitalSaleMessage.Set(&v)
}
// SetDigitalSaleMessageNil sets the value for DigitalSaleMessage to be an explicit nil
func (o *Shop) SetDigitalSaleMessageNil() {
	o.DigitalSaleMessage.Set(nil)
}

// UnsetDigitalSaleMessage ensures that no value is present for DigitalSaleMessage, not even an explicit nil
func (o *Shop) UnsetDigitalSaleMessage() {
	o.DigitalSaleMessage.Unset()
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *Shop) GetUpdateDate() int32 {
	if o == nil || IsNil(o.UpdateDate) {
		var ret int32
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetUpdateDateOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *Shop) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given int32 and assigns it to the UpdateDate field.
func (o *Shop) SetUpdateDate(v int32) {
	o.UpdateDate = &v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value if set, zero value otherwise.
func (o *Shop) GetUpdatedTimestamp() int32 {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetUpdatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		return nil, false
	}
	return o.UpdatedTimestamp, true
}

// HasUpdatedTimestamp returns a boolean if a field has been set.
func (o *Shop) HasUpdatedTimestamp() bool {
	if o != nil && !IsNil(o.UpdatedTimestamp) {
		return true
	}

	return false
}

// SetUpdatedTimestamp gets a reference to the given int32 and assigns it to the UpdatedTimestamp field.
func (o *Shop) SetUpdatedTimestamp(v int32) {
	o.UpdatedTimestamp = &v
}

// GetListingActiveCount returns the ListingActiveCount field value if set, zero value otherwise.
func (o *Shop) GetListingActiveCount() int32 {
	if o == nil || IsNil(o.ListingActiveCount) {
		var ret int32
		return ret
	}
	return *o.ListingActiveCount
}

// GetListingActiveCountOk returns a tuple with the ListingActiveCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetListingActiveCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ListingActiveCount) {
		return nil, false
	}
	return o.ListingActiveCount, true
}

// HasListingActiveCount returns a boolean if a field has been set.
func (o *Shop) HasListingActiveCount() bool {
	if o != nil && !IsNil(o.ListingActiveCount) {
		return true
	}

	return false
}

// SetListingActiveCount gets a reference to the given int32 and assigns it to the ListingActiveCount field.
func (o *Shop) SetListingActiveCount(v int32) {
	o.ListingActiveCount = &v
}

// GetDigitalListingCount returns the DigitalListingCount field value if set, zero value otherwise.
func (o *Shop) GetDigitalListingCount() int32 {
	if o == nil || IsNil(o.DigitalListingCount) {
		var ret int32
		return ret
	}
	return *o.DigitalListingCount
}

// GetDigitalListingCountOk returns a tuple with the DigitalListingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetDigitalListingCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DigitalListingCount) {
		return nil, false
	}
	return o.DigitalListingCount, true
}

// HasDigitalListingCount returns a boolean if a field has been set.
func (o *Shop) HasDigitalListingCount() bool {
	if o != nil && !IsNil(o.DigitalListingCount) {
		return true
	}

	return false
}

// SetDigitalListingCount gets a reference to the given int32 and assigns it to the DigitalListingCount field.
func (o *Shop) SetDigitalListingCount(v int32) {
	o.DigitalListingCount = &v
}

// GetLoginName returns the LoginName field value if set, zero value otherwise.
func (o *Shop) GetLoginName() string {
	if o == nil || IsNil(o.LoginName) {
		var ret string
		return ret
	}
	return *o.LoginName
}

// GetLoginNameOk returns a tuple with the LoginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetLoginNameOk() (*string, bool) {
	if o == nil || IsNil(o.LoginName) {
		return nil, false
	}
	return o.LoginName, true
}

// HasLoginName returns a boolean if a field has been set.
func (o *Shop) HasLoginName() bool {
	if o != nil && !IsNil(o.LoginName) {
		return true
	}

	return false
}

// SetLoginName gets a reference to the given string and assigns it to the LoginName field.
func (o *Shop) SetLoginName(v string) {
	o.LoginName = &v
}

// GetAcceptsCustomRequests returns the AcceptsCustomRequests field value if set, zero value otherwise.
func (o *Shop) GetAcceptsCustomRequests() bool {
	if o == nil || IsNil(o.AcceptsCustomRequests) {
		var ret bool
		return ret
	}
	return *o.AcceptsCustomRequests
}

// GetAcceptsCustomRequestsOk returns a tuple with the AcceptsCustomRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetAcceptsCustomRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptsCustomRequests) {
		return nil, false
	}
	return o.AcceptsCustomRequests, true
}

// HasAcceptsCustomRequests returns a boolean if a field has been set.
func (o *Shop) HasAcceptsCustomRequests() bool {
	if o != nil && !IsNil(o.AcceptsCustomRequests) {
		return true
	}

	return false
}

// SetAcceptsCustomRequests gets a reference to the given bool and assigns it to the AcceptsCustomRequests field.
func (o *Shop) SetAcceptsCustomRequests(v bool) {
	o.AcceptsCustomRequests = &v
}

// GetPolicyWelcome returns the PolicyWelcome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetPolicyWelcome() string {
	if o == nil || IsNil(o.PolicyWelcome.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyWelcome.Get()
}

// GetPolicyWelcomeOk returns a tuple with the PolicyWelcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetPolicyWelcomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyWelcome.Get(), o.PolicyWelcome.IsSet()
}

// HasPolicyWelcome returns a boolean if a field has been set.
func (o *Shop) HasPolicyWelcome() bool {
	if o != nil && o.PolicyWelcome.IsSet() {
		return true
	}

	return false
}

// SetPolicyWelcome gets a reference to the given NullableString and assigns it to the PolicyWelcome field.
func (o *Shop) SetPolicyWelcome(v string) {
	o.PolicyWelcome.Set(&v)
}
// SetPolicyWelcomeNil sets the value for PolicyWelcome to be an explicit nil
func (o *Shop) SetPolicyWelcomeNil() {
	o.PolicyWelcome.Set(nil)
}

// UnsetPolicyWelcome ensures that no value is present for PolicyWelcome, not even an explicit nil
func (o *Shop) UnsetPolicyWelcome() {
	o.PolicyWelcome.Unset()
}

// GetPolicyPayment returns the PolicyPayment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetPolicyPayment() string {
	if o == nil || IsNil(o.PolicyPayment.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyPayment.Get()
}

// GetPolicyPaymentOk returns a tuple with the PolicyPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetPolicyPaymentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyPayment.Get(), o.PolicyPayment.IsSet()
}

// HasPolicyPayment returns a boolean if a field has been set.
func (o *Shop) HasPolicyPayment() bool {
	if o != nil && o.PolicyPayment.IsSet() {
		return true
	}

	return false
}

// SetPolicyPayment gets a reference to the given NullableString and assigns it to the PolicyPayment field.
func (o *Shop) SetPolicyPayment(v string) {
	o.PolicyPayment.Set(&v)
}
// SetPolicyPaymentNil sets the value for PolicyPayment to be an explicit nil
func (o *Shop) SetPolicyPaymentNil() {
	o.PolicyPayment.Set(nil)
}

// UnsetPolicyPayment ensures that no value is present for PolicyPayment, not even an explicit nil
func (o *Shop) UnsetPolicyPayment() {
	o.PolicyPayment.Unset()
}

// GetPolicyShipping returns the PolicyShipping field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetPolicyShipping() string {
	if o == nil || IsNil(o.PolicyShipping.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyShipping.Get()
}

// GetPolicyShippingOk returns a tuple with the PolicyShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetPolicyShippingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyShipping.Get(), o.PolicyShipping.IsSet()
}

// HasPolicyShipping returns a boolean if a field has been set.
func (o *Shop) HasPolicyShipping() bool {
	if o != nil && o.PolicyShipping.IsSet() {
		return true
	}

	return false
}

// SetPolicyShipping gets a reference to the given NullableString and assigns it to the PolicyShipping field.
func (o *Shop) SetPolicyShipping(v string) {
	o.PolicyShipping.Set(&v)
}
// SetPolicyShippingNil sets the value for PolicyShipping to be an explicit nil
func (o *Shop) SetPolicyShippingNil() {
	o.PolicyShipping.Set(nil)
}

// UnsetPolicyShipping ensures that no value is present for PolicyShipping, not even an explicit nil
func (o *Shop) UnsetPolicyShipping() {
	o.PolicyShipping.Unset()
}

// GetPolicyRefunds returns the PolicyRefunds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetPolicyRefunds() string {
	if o == nil || IsNil(o.PolicyRefunds.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyRefunds.Get()
}

// GetPolicyRefundsOk returns a tuple with the PolicyRefunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetPolicyRefundsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyRefunds.Get(), o.PolicyRefunds.IsSet()
}

// HasPolicyRefunds returns a boolean if a field has been set.
func (o *Shop) HasPolicyRefunds() bool {
	if o != nil && o.PolicyRefunds.IsSet() {
		return true
	}

	return false
}

// SetPolicyRefunds gets a reference to the given NullableString and assigns it to the PolicyRefunds field.
func (o *Shop) SetPolicyRefunds(v string) {
	o.PolicyRefunds.Set(&v)
}
// SetPolicyRefundsNil sets the value for PolicyRefunds to be an explicit nil
func (o *Shop) SetPolicyRefundsNil() {
	o.PolicyRefunds.Set(nil)
}

// UnsetPolicyRefunds ensures that no value is present for PolicyRefunds, not even an explicit nil
func (o *Shop) UnsetPolicyRefunds() {
	o.PolicyRefunds.Unset()
}

// GetPolicyAdditional returns the PolicyAdditional field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetPolicyAdditional() string {
	if o == nil || IsNil(o.PolicyAdditional.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyAdditional.Get()
}

// GetPolicyAdditionalOk returns a tuple with the PolicyAdditional field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetPolicyAdditionalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyAdditional.Get(), o.PolicyAdditional.IsSet()
}

// HasPolicyAdditional returns a boolean if a field has been set.
func (o *Shop) HasPolicyAdditional() bool {
	if o != nil && o.PolicyAdditional.IsSet() {
		return true
	}

	return false
}

// SetPolicyAdditional gets a reference to the given NullableString and assigns it to the PolicyAdditional field.
func (o *Shop) SetPolicyAdditional(v string) {
	o.PolicyAdditional.Set(&v)
}
// SetPolicyAdditionalNil sets the value for PolicyAdditional to be an explicit nil
func (o *Shop) SetPolicyAdditionalNil() {
	o.PolicyAdditional.Set(nil)
}

// UnsetPolicyAdditional ensures that no value is present for PolicyAdditional, not even an explicit nil
func (o *Shop) UnsetPolicyAdditional() {
	o.PolicyAdditional.Unset()
}

// GetPolicySellerInfo returns the PolicySellerInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetPolicySellerInfo() string {
	if o == nil || IsNil(o.PolicySellerInfo.Get()) {
		var ret string
		return ret
	}
	return *o.PolicySellerInfo.Get()
}

// GetPolicySellerInfoOk returns a tuple with the PolicySellerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetPolicySellerInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicySellerInfo.Get(), o.PolicySellerInfo.IsSet()
}

// HasPolicySellerInfo returns a boolean if a field has been set.
func (o *Shop) HasPolicySellerInfo() bool {
	if o != nil && o.PolicySellerInfo.IsSet() {
		return true
	}

	return false
}

// SetPolicySellerInfo gets a reference to the given NullableString and assigns it to the PolicySellerInfo field.
func (o *Shop) SetPolicySellerInfo(v string) {
	o.PolicySellerInfo.Set(&v)
}
// SetPolicySellerInfoNil sets the value for PolicySellerInfo to be an explicit nil
func (o *Shop) SetPolicySellerInfoNil() {
	o.PolicySellerInfo.Set(nil)
}

// UnsetPolicySellerInfo ensures that no value is present for PolicySellerInfo, not even an explicit nil
func (o *Shop) UnsetPolicySellerInfo() {
	o.PolicySellerInfo.Unset()
}

// GetPolicyUpdateDate returns the PolicyUpdateDate field value if set, zero value otherwise.
func (o *Shop) GetPolicyUpdateDate() int32 {
	if o == nil || IsNil(o.PolicyUpdateDate) {
		var ret int32
		return ret
	}
	return *o.PolicyUpdateDate
}

// GetPolicyUpdateDateOk returns a tuple with the PolicyUpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetPolicyUpdateDateOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyUpdateDate) {
		return nil, false
	}
	return o.PolicyUpdateDate, true
}

// HasPolicyUpdateDate returns a boolean if a field has been set.
func (o *Shop) HasPolicyUpdateDate() bool {
	if o != nil && !IsNil(o.PolicyUpdateDate) {
		return true
	}

	return false
}

// SetPolicyUpdateDate gets a reference to the given int32 and assigns it to the PolicyUpdateDate field.
func (o *Shop) SetPolicyUpdateDate(v int32) {
	o.PolicyUpdateDate = &v
}

// GetPolicyHasPrivateReceiptInfo returns the PolicyHasPrivateReceiptInfo field value if set, zero value otherwise.
func (o *Shop) GetPolicyHasPrivateReceiptInfo() bool {
	if o == nil || IsNil(o.PolicyHasPrivateReceiptInfo) {
		var ret bool
		return ret
	}
	return *o.PolicyHasPrivateReceiptInfo
}

// GetPolicyHasPrivateReceiptInfoOk returns a tuple with the PolicyHasPrivateReceiptInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetPolicyHasPrivateReceiptInfoOk() (*bool, bool) {
	if o == nil || IsNil(o.PolicyHasPrivateReceiptInfo) {
		return nil, false
	}
	return o.PolicyHasPrivateReceiptInfo, true
}

// HasPolicyHasPrivateReceiptInfo returns a boolean if a field has been set.
func (o *Shop) HasPolicyHasPrivateReceiptInfo() bool {
	if o != nil && !IsNil(o.PolicyHasPrivateReceiptInfo) {
		return true
	}

	return false
}

// SetPolicyHasPrivateReceiptInfo gets a reference to the given bool and assigns it to the PolicyHasPrivateReceiptInfo field.
func (o *Shop) SetPolicyHasPrivateReceiptInfo(v bool) {
	o.PolicyHasPrivateReceiptInfo = &v
}

// GetHasUnstructuredPolicies returns the HasUnstructuredPolicies field value if set, zero value otherwise.
func (o *Shop) GetHasUnstructuredPolicies() bool {
	if o == nil || IsNil(o.HasUnstructuredPolicies) {
		var ret bool
		return ret
	}
	return *o.HasUnstructuredPolicies
}

// GetHasUnstructuredPoliciesOk returns a tuple with the HasUnstructuredPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetHasUnstructuredPoliciesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasUnstructuredPolicies) {
		return nil, false
	}
	return o.HasUnstructuredPolicies, true
}

// HasHasUnstructuredPolicies returns a boolean if a field has been set.
func (o *Shop) HasHasUnstructuredPolicies() bool {
	if o != nil && !IsNil(o.HasUnstructuredPolicies) {
		return true
	}

	return false
}

// SetHasUnstructuredPolicies gets a reference to the given bool and assigns it to the HasUnstructuredPolicies field.
func (o *Shop) SetHasUnstructuredPolicies(v bool) {
	o.HasUnstructuredPolicies = &v
}

// GetPolicyPrivacy returns the PolicyPrivacy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetPolicyPrivacy() string {
	if o == nil || IsNil(o.PolicyPrivacy.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyPrivacy.Get()
}

// GetPolicyPrivacyOk returns a tuple with the PolicyPrivacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetPolicyPrivacyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyPrivacy.Get(), o.PolicyPrivacy.IsSet()
}

// HasPolicyPrivacy returns a boolean if a field has been set.
func (o *Shop) HasPolicyPrivacy() bool {
	if o != nil && o.PolicyPrivacy.IsSet() {
		return true
	}

	return false
}

// SetPolicyPrivacy gets a reference to the given NullableString and assigns it to the PolicyPrivacy field.
func (o *Shop) SetPolicyPrivacy(v string) {
	o.PolicyPrivacy.Set(&v)
}
// SetPolicyPrivacyNil sets the value for PolicyPrivacy to be an explicit nil
func (o *Shop) SetPolicyPrivacyNil() {
	o.PolicyPrivacy.Set(nil)
}

// UnsetPolicyPrivacy ensures that no value is present for PolicyPrivacy, not even an explicit nil
func (o *Shop) UnsetPolicyPrivacy() {
	o.PolicyPrivacy.Unset()
}

// GetVacationAutoreply returns the VacationAutoreply field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetVacationAutoreply() string {
	if o == nil || IsNil(o.VacationAutoreply.Get()) {
		var ret string
		return ret
	}
	return *o.VacationAutoreply.Get()
}

// GetVacationAutoreplyOk returns a tuple with the VacationAutoreply field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetVacationAutoreplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VacationAutoreply.Get(), o.VacationAutoreply.IsSet()
}

// HasVacationAutoreply returns a boolean if a field has been set.
func (o *Shop) HasVacationAutoreply() bool {
	if o != nil && o.VacationAutoreply.IsSet() {
		return true
	}

	return false
}

// SetVacationAutoreply gets a reference to the given NullableString and assigns it to the VacationAutoreply field.
func (o *Shop) SetVacationAutoreply(v string) {
	o.VacationAutoreply.Set(&v)
}
// SetVacationAutoreplyNil sets the value for VacationAutoreply to be an explicit nil
func (o *Shop) SetVacationAutoreplyNil() {
	o.VacationAutoreply.Set(nil)
}

// UnsetVacationAutoreply ensures that no value is present for VacationAutoreply, not even an explicit nil
func (o *Shop) UnsetVacationAutoreply() {
	o.VacationAutoreply.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Shop) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Shop) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Shop) SetUrl(v string) {
	o.Url = &v
}

// GetImageUrl760x100 returns the ImageUrl760x100 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetImageUrl760x100() string {
	if o == nil || IsNil(o.ImageUrl760x100.Get()) {
		var ret string
		return ret
	}
	return *o.ImageUrl760x100.Get()
}

// GetImageUrl760x100Ok returns a tuple with the ImageUrl760x100 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetImageUrl760x100Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageUrl760x100.Get(), o.ImageUrl760x100.IsSet()
}

// HasImageUrl760x100 returns a boolean if a field has been set.
func (o *Shop) HasImageUrl760x100() bool {
	if o != nil && o.ImageUrl760x100.IsSet() {
		return true
	}

	return false
}

// SetImageUrl760x100 gets a reference to the given NullableString and assigns it to the ImageUrl760x100 field.
func (o *Shop) SetImageUrl760x100(v string) {
	o.ImageUrl760x100.Set(&v)
}
// SetImageUrl760x100Nil sets the value for ImageUrl760x100 to be an explicit nil
func (o *Shop) SetImageUrl760x100Nil() {
	o.ImageUrl760x100.Set(nil)
}

// UnsetImageUrl760x100 ensures that no value is present for ImageUrl760x100, not even an explicit nil
func (o *Shop) UnsetImageUrl760x100() {
	o.ImageUrl760x100.Unset()
}

// GetNumFavorers returns the NumFavorers field value if set, zero value otherwise.
func (o *Shop) GetNumFavorers() int32 {
	if o == nil || IsNil(o.NumFavorers) {
		var ret int32
		return ret
	}
	return *o.NumFavorers
}

// GetNumFavorersOk returns a tuple with the NumFavorers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetNumFavorersOk() (*int32, bool) {
	if o == nil || IsNil(o.NumFavorers) {
		return nil, false
	}
	return o.NumFavorers, true
}

// HasNumFavorers returns a boolean if a field has been set.
func (o *Shop) HasNumFavorers() bool {
	if o != nil && !IsNil(o.NumFavorers) {
		return true
	}

	return false
}

// SetNumFavorers gets a reference to the given int32 and assigns it to the NumFavorers field.
func (o *Shop) SetNumFavorers(v int32) {
	o.NumFavorers = &v
}

// GetLanguages returns the Languages field value if set, zero value otherwise.
func (o *Shop) GetLanguages() []string {
	if o == nil || IsNil(o.Languages) {
		var ret []string
		return ret
	}
	return o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetLanguagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Languages) {
		return nil, false
	}
	return o.Languages, true
}

// HasLanguages returns a boolean if a field has been set.
func (o *Shop) HasLanguages() bool {
	if o != nil && !IsNil(o.Languages) {
		return true
	}

	return false
}

// SetLanguages gets a reference to the given []string and assigns it to the Languages field.
func (o *Shop) SetLanguages(v []string) {
	o.Languages = v
}

// GetIconUrlFullxfull returns the IconUrlFullxfull field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetIconUrlFullxfull() string {
	if o == nil || IsNil(o.IconUrlFullxfull.Get()) {
		var ret string
		return ret
	}
	return *o.IconUrlFullxfull.Get()
}

// GetIconUrlFullxfullOk returns a tuple with the IconUrlFullxfull field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetIconUrlFullxfullOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconUrlFullxfull.Get(), o.IconUrlFullxfull.IsSet()
}

// HasIconUrlFullxfull returns a boolean if a field has been set.
func (o *Shop) HasIconUrlFullxfull() bool {
	if o != nil && o.IconUrlFullxfull.IsSet() {
		return true
	}

	return false
}

// SetIconUrlFullxfull gets a reference to the given NullableString and assigns it to the IconUrlFullxfull field.
func (o *Shop) SetIconUrlFullxfull(v string) {
	o.IconUrlFullxfull.Set(&v)
}
// SetIconUrlFullxfullNil sets the value for IconUrlFullxfull to be an explicit nil
func (o *Shop) SetIconUrlFullxfullNil() {
	o.IconUrlFullxfull.Set(nil)
}

// UnsetIconUrlFullxfull ensures that no value is present for IconUrlFullxfull, not even an explicit nil
func (o *Shop) UnsetIconUrlFullxfull() {
	o.IconUrlFullxfull.Unset()
}

// GetIsUsingStructuredPolicies returns the IsUsingStructuredPolicies field value if set, zero value otherwise.
func (o *Shop) GetIsUsingStructuredPolicies() bool {
	if o == nil || IsNil(o.IsUsingStructuredPolicies) {
		var ret bool
		return ret
	}
	return *o.IsUsingStructuredPolicies
}

// GetIsUsingStructuredPoliciesOk returns a tuple with the IsUsingStructuredPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIsUsingStructuredPoliciesOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsingStructuredPolicies) {
		return nil, false
	}
	return o.IsUsingStructuredPolicies, true
}

// HasIsUsingStructuredPolicies returns a boolean if a field has been set.
func (o *Shop) HasIsUsingStructuredPolicies() bool {
	if o != nil && !IsNil(o.IsUsingStructuredPolicies) {
		return true
	}

	return false
}

// SetIsUsingStructuredPolicies gets a reference to the given bool and assigns it to the IsUsingStructuredPolicies field.
func (o *Shop) SetIsUsingStructuredPolicies(v bool) {
	o.IsUsingStructuredPolicies = &v
}

// GetHasOnboardedStructuredPolicies returns the HasOnboardedStructuredPolicies field value if set, zero value otherwise.
func (o *Shop) GetHasOnboardedStructuredPolicies() bool {
	if o == nil || IsNil(o.HasOnboardedStructuredPolicies) {
		var ret bool
		return ret
	}
	return *o.HasOnboardedStructuredPolicies
}

// GetHasOnboardedStructuredPoliciesOk returns a tuple with the HasOnboardedStructuredPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetHasOnboardedStructuredPoliciesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOnboardedStructuredPolicies) {
		return nil, false
	}
	return o.HasOnboardedStructuredPolicies, true
}

// HasHasOnboardedStructuredPolicies returns a boolean if a field has been set.
func (o *Shop) HasHasOnboardedStructuredPolicies() bool {
	if o != nil && !IsNil(o.HasOnboardedStructuredPolicies) {
		return true
	}

	return false
}

// SetHasOnboardedStructuredPolicies gets a reference to the given bool and assigns it to the HasOnboardedStructuredPolicies field.
func (o *Shop) SetHasOnboardedStructuredPolicies(v bool) {
	o.HasOnboardedStructuredPolicies = &v
}

// GetIncludeDisputeFormLink returns the IncludeDisputeFormLink field value if set, zero value otherwise.
func (o *Shop) GetIncludeDisputeFormLink() bool {
	if o == nil || IsNil(o.IncludeDisputeFormLink) {
		var ret bool
		return ret
	}
	return *o.IncludeDisputeFormLink
}

// GetIncludeDisputeFormLinkOk returns a tuple with the IncludeDisputeFormLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIncludeDisputeFormLinkOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeDisputeFormLink) {
		return nil, false
	}
	return o.IncludeDisputeFormLink, true
}

// HasIncludeDisputeFormLink returns a boolean if a field has been set.
func (o *Shop) HasIncludeDisputeFormLink() bool {
	if o != nil && !IsNil(o.IncludeDisputeFormLink) {
		return true
	}

	return false
}

// SetIncludeDisputeFormLink gets a reference to the given bool and assigns it to the IncludeDisputeFormLink field.
func (o *Shop) SetIncludeDisputeFormLink(v bool) {
	o.IncludeDisputeFormLink = &v
}

// GetIsDirectCheckoutOnboarded returns the IsDirectCheckoutOnboarded field value if set, zero value otherwise.
func (o *Shop) GetIsDirectCheckoutOnboarded() bool {
	if o == nil || IsNil(o.IsDirectCheckoutOnboarded) {
		var ret bool
		return ret
	}
	return *o.IsDirectCheckoutOnboarded
}

// GetIsDirectCheckoutOnboardedOk returns a tuple with the IsDirectCheckoutOnboarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIsDirectCheckoutOnboardedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDirectCheckoutOnboarded) {
		return nil, false
	}
	return o.IsDirectCheckoutOnboarded, true
}

// HasIsDirectCheckoutOnboarded returns a boolean if a field has been set.
func (o *Shop) HasIsDirectCheckoutOnboarded() bool {
	if o != nil && !IsNil(o.IsDirectCheckoutOnboarded) {
		return true
	}

	return false
}

// SetIsDirectCheckoutOnboarded gets a reference to the given bool and assigns it to the IsDirectCheckoutOnboarded field.
func (o *Shop) SetIsDirectCheckoutOnboarded(v bool) {
	o.IsDirectCheckoutOnboarded = &v
}

// GetIsEtsyPaymentsOnboarded returns the IsEtsyPaymentsOnboarded field value if set, zero value otherwise.
func (o *Shop) GetIsEtsyPaymentsOnboarded() bool {
	if o == nil || IsNil(o.IsEtsyPaymentsOnboarded) {
		var ret bool
		return ret
	}
	return *o.IsEtsyPaymentsOnboarded
}

// GetIsEtsyPaymentsOnboardedOk returns a tuple with the IsEtsyPaymentsOnboarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIsEtsyPaymentsOnboardedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEtsyPaymentsOnboarded) {
		return nil, false
	}
	return o.IsEtsyPaymentsOnboarded, true
}

// HasIsEtsyPaymentsOnboarded returns a boolean if a field has been set.
func (o *Shop) HasIsEtsyPaymentsOnboarded() bool {
	if o != nil && !IsNil(o.IsEtsyPaymentsOnboarded) {
		return true
	}

	return false
}

// SetIsEtsyPaymentsOnboarded gets a reference to the given bool and assigns it to the IsEtsyPaymentsOnboarded field.
func (o *Shop) SetIsEtsyPaymentsOnboarded(v bool) {
	o.IsEtsyPaymentsOnboarded = &v
}

// GetIsCalculatedEligible returns the IsCalculatedEligible field value if set, zero value otherwise.
func (o *Shop) GetIsCalculatedEligible() bool {
	if o == nil || IsNil(o.IsCalculatedEligible) {
		var ret bool
		return ret
	}
	return *o.IsCalculatedEligible
}

// GetIsCalculatedEligibleOk returns a tuple with the IsCalculatedEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIsCalculatedEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCalculatedEligible) {
		return nil, false
	}
	return o.IsCalculatedEligible, true
}

// HasIsCalculatedEligible returns a boolean if a field has been set.
func (o *Shop) HasIsCalculatedEligible() bool {
	if o != nil && !IsNil(o.IsCalculatedEligible) {
		return true
	}

	return false
}

// SetIsCalculatedEligible gets a reference to the given bool and assigns it to the IsCalculatedEligible field.
func (o *Shop) SetIsCalculatedEligible(v bool) {
	o.IsCalculatedEligible = &v
}

// GetIsOptedInToBuyerPromise returns the IsOptedInToBuyerPromise field value if set, zero value otherwise.
func (o *Shop) GetIsOptedInToBuyerPromise() bool {
	if o == nil || IsNil(o.IsOptedInToBuyerPromise) {
		var ret bool
		return ret
	}
	return *o.IsOptedInToBuyerPromise
}

// GetIsOptedInToBuyerPromiseOk returns a tuple with the IsOptedInToBuyerPromise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIsOptedInToBuyerPromiseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOptedInToBuyerPromise) {
		return nil, false
	}
	return o.IsOptedInToBuyerPromise, true
}

// HasIsOptedInToBuyerPromise returns a boolean if a field has been set.
func (o *Shop) HasIsOptedInToBuyerPromise() bool {
	if o != nil && !IsNil(o.IsOptedInToBuyerPromise) {
		return true
	}

	return false
}

// SetIsOptedInToBuyerPromise gets a reference to the given bool and assigns it to the IsOptedInToBuyerPromise field.
func (o *Shop) SetIsOptedInToBuyerPromise(v bool) {
	o.IsOptedInToBuyerPromise = &v
}

// GetIsShopUsBased returns the IsShopUsBased field value if set, zero value otherwise.
func (o *Shop) GetIsShopUsBased() bool {
	if o == nil || IsNil(o.IsShopUsBased) {
		var ret bool
		return ret
	}
	return *o.IsShopUsBased
}

// GetIsShopUsBasedOk returns a tuple with the IsShopUsBased field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetIsShopUsBasedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsShopUsBased) {
		return nil, false
	}
	return o.IsShopUsBased, true
}

// HasIsShopUsBased returns a boolean if a field has been set.
func (o *Shop) HasIsShopUsBased() bool {
	if o != nil && !IsNil(o.IsShopUsBased) {
		return true
	}

	return false
}

// SetIsShopUsBased gets a reference to the given bool and assigns it to the IsShopUsBased field.
func (o *Shop) SetIsShopUsBased(v bool) {
	o.IsShopUsBased = &v
}

// GetTransactionSoldCount returns the TransactionSoldCount field value if set, zero value otherwise.
func (o *Shop) GetTransactionSoldCount() int32 {
	if o == nil || IsNil(o.TransactionSoldCount) {
		var ret int32
		return ret
	}
	return *o.TransactionSoldCount
}

// GetTransactionSoldCountOk returns a tuple with the TransactionSoldCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shop) GetTransactionSoldCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionSoldCount) {
		return nil, false
	}
	return o.TransactionSoldCount, true
}

// HasTransactionSoldCount returns a boolean if a field has been set.
func (o *Shop) HasTransactionSoldCount() bool {
	if o != nil && !IsNil(o.TransactionSoldCount) {
		return true
	}

	return false
}

// SetTransactionSoldCount gets a reference to the given int32 and assigns it to the TransactionSoldCount field.
func (o *Shop) SetTransactionSoldCount(v int32) {
	o.TransactionSoldCount = &v
}

// GetShippingFromCountryIso returns the ShippingFromCountryIso field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetShippingFromCountryIso() string {
	if o == nil || IsNil(o.ShippingFromCountryIso.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingFromCountryIso.Get()
}

// GetShippingFromCountryIsoOk returns a tuple with the ShippingFromCountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetShippingFromCountryIsoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingFromCountryIso.Get(), o.ShippingFromCountryIso.IsSet()
}

// HasShippingFromCountryIso returns a boolean if a field has been set.
func (o *Shop) HasShippingFromCountryIso() bool {
	if o != nil && o.ShippingFromCountryIso.IsSet() {
		return true
	}

	return false
}

// SetShippingFromCountryIso gets a reference to the given NullableString and assigns it to the ShippingFromCountryIso field.
func (o *Shop) SetShippingFromCountryIso(v string) {
	o.ShippingFromCountryIso.Set(&v)
}
// SetShippingFromCountryIsoNil sets the value for ShippingFromCountryIso to be an explicit nil
func (o *Shop) SetShippingFromCountryIsoNil() {
	o.ShippingFromCountryIso.Set(nil)
}

// UnsetShippingFromCountryIso ensures that no value is present for ShippingFromCountryIso, not even an explicit nil
func (o *Shop) UnsetShippingFromCountryIso() {
	o.ShippingFromCountryIso.Unset()
}

// GetShopLocationCountryIso returns the ShopLocationCountryIso field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetShopLocationCountryIso() string {
	if o == nil || IsNil(o.ShopLocationCountryIso.Get()) {
		var ret string
		return ret
	}
	return *o.ShopLocationCountryIso.Get()
}

// GetShopLocationCountryIsoOk returns a tuple with the ShopLocationCountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetShopLocationCountryIsoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShopLocationCountryIso.Get(), o.ShopLocationCountryIso.IsSet()
}

// HasShopLocationCountryIso returns a boolean if a field has been set.
func (o *Shop) HasShopLocationCountryIso() bool {
	if o != nil && o.ShopLocationCountryIso.IsSet() {
		return true
	}

	return false
}

// SetShopLocationCountryIso gets a reference to the given NullableString and assigns it to the ShopLocationCountryIso field.
func (o *Shop) SetShopLocationCountryIso(v string) {
	o.ShopLocationCountryIso.Set(&v)
}
// SetShopLocationCountryIsoNil sets the value for ShopLocationCountryIso to be an explicit nil
func (o *Shop) SetShopLocationCountryIsoNil() {
	o.ShopLocationCountryIso.Set(nil)
}

// UnsetShopLocationCountryIso ensures that no value is present for ShopLocationCountryIso, not even an explicit nil
func (o *Shop) UnsetShopLocationCountryIso() {
	o.ShopLocationCountryIso.Unset()
}

// GetReviewCount returns the ReviewCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetReviewCount() int32 {
	if o == nil || IsNil(o.ReviewCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ReviewCount.Get()
}

// GetReviewCountOk returns a tuple with the ReviewCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetReviewCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReviewCount.Get(), o.ReviewCount.IsSet()
}

// HasReviewCount returns a boolean if a field has been set.
func (o *Shop) HasReviewCount() bool {
	if o != nil && o.ReviewCount.IsSet() {
		return true
	}

	return false
}

// SetReviewCount gets a reference to the given NullableInt32 and assigns it to the ReviewCount field.
func (o *Shop) SetReviewCount(v int32) {
	o.ReviewCount.Set(&v)
}
// SetReviewCountNil sets the value for ReviewCount to be an explicit nil
func (o *Shop) SetReviewCountNil() {
	o.ReviewCount.Set(nil)
}

// UnsetReviewCount ensures that no value is present for ReviewCount, not even an explicit nil
func (o *Shop) UnsetReviewCount() {
	o.ReviewCount.Unset()
}

// GetReviewAverage returns the ReviewAverage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shop) GetReviewAverage() float32 {
	if o == nil || IsNil(o.ReviewAverage.Get()) {
		var ret float32
		return ret
	}
	return *o.ReviewAverage.Get()
}

// GetReviewAverageOk returns a tuple with the ReviewAverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shop) GetReviewAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReviewAverage.Get(), o.ReviewAverage.IsSet()
}

// HasReviewAverage returns a boolean if a field has been set.
func (o *Shop) HasReviewAverage() bool {
	if o != nil && o.ReviewAverage.IsSet() {
		return true
	}

	return false
}

// SetReviewAverage gets a reference to the given NullableFloat32 and assigns it to the ReviewAverage field.
func (o *Shop) SetReviewAverage(v float32) {
	o.ReviewAverage.Set(&v)
}
// SetReviewAverageNil sets the value for ReviewAverage to be an explicit nil
func (o *Shop) SetReviewAverageNil() {
	o.ReviewAverage.Set(nil)
}

// UnsetReviewAverage ensures that no value is present for ReviewAverage, not even an explicit nil
func (o *Shop) UnsetReviewAverage() {
	o.ReviewAverage.Unset()
}

func (o Shop) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Shop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.ShopName) {
		toSerialize["shop_name"] = o.ShopName
	}
	if !IsNil(o.CreateDate) {
		toSerialize["create_date"] = o.CreateDate
	}
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Announcement.IsSet() {
		toSerialize["announcement"] = o.Announcement.Get()
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if !IsNil(o.IsVacation) {
		toSerialize["is_vacation"] = o.IsVacation
	}
	if o.VacationMessage.IsSet() {
		toSerialize["vacation_message"] = o.VacationMessage.Get()
	}
	if o.SaleMessage.IsSet() {
		toSerialize["sale_message"] = o.SaleMessage.Get()
	}
	if o.DigitalSaleMessage.IsSet() {
		toSerialize["digital_sale_message"] = o.DigitalSaleMessage.Get()
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["update_date"] = o.UpdateDate
	}
	if !IsNil(o.UpdatedTimestamp) {
		toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	}
	if !IsNil(o.ListingActiveCount) {
		toSerialize["listing_active_count"] = o.ListingActiveCount
	}
	if !IsNil(o.DigitalListingCount) {
		toSerialize["digital_listing_count"] = o.DigitalListingCount
	}
	if !IsNil(o.LoginName) {
		toSerialize["login_name"] = o.LoginName
	}
	if !IsNil(o.AcceptsCustomRequests) {
		toSerialize["accepts_custom_requests"] = o.AcceptsCustomRequests
	}
	if o.PolicyWelcome.IsSet() {
		toSerialize["policy_welcome"] = o.PolicyWelcome.Get()
	}
	if o.PolicyPayment.IsSet() {
		toSerialize["policy_payment"] = o.PolicyPayment.Get()
	}
	if o.PolicyShipping.IsSet() {
		toSerialize["policy_shipping"] = o.PolicyShipping.Get()
	}
	if o.PolicyRefunds.IsSet() {
		toSerialize["policy_refunds"] = o.PolicyRefunds.Get()
	}
	if o.PolicyAdditional.IsSet() {
		toSerialize["policy_additional"] = o.PolicyAdditional.Get()
	}
	if o.PolicySellerInfo.IsSet() {
		toSerialize["policy_seller_info"] = o.PolicySellerInfo.Get()
	}
	if !IsNil(o.PolicyUpdateDate) {
		toSerialize["policy_update_date"] = o.PolicyUpdateDate
	}
	if !IsNil(o.PolicyHasPrivateReceiptInfo) {
		toSerialize["policy_has_private_receipt_info"] = o.PolicyHasPrivateReceiptInfo
	}
	if !IsNil(o.HasUnstructuredPolicies) {
		toSerialize["has_unstructured_policies"] = o.HasUnstructuredPolicies
	}
	if o.PolicyPrivacy.IsSet() {
		toSerialize["policy_privacy"] = o.PolicyPrivacy.Get()
	}
	if o.VacationAutoreply.IsSet() {
		toSerialize["vacation_autoreply"] = o.VacationAutoreply.Get()
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if o.ImageUrl760x100.IsSet() {
		toSerialize["image_url_760x100"] = o.ImageUrl760x100.Get()
	}
	if !IsNil(o.NumFavorers) {
		toSerialize["num_favorers"] = o.NumFavorers
	}
	if !IsNil(o.Languages) {
		toSerialize["languages"] = o.Languages
	}
	if o.IconUrlFullxfull.IsSet() {
		toSerialize["icon_url_fullxfull"] = o.IconUrlFullxfull.Get()
	}
	if !IsNil(o.IsUsingStructuredPolicies) {
		toSerialize["is_using_structured_policies"] = o.IsUsingStructuredPolicies
	}
	if !IsNil(o.HasOnboardedStructuredPolicies) {
		toSerialize["has_onboarded_structured_policies"] = o.HasOnboardedStructuredPolicies
	}
	if !IsNil(o.IncludeDisputeFormLink) {
		toSerialize["include_dispute_form_link"] = o.IncludeDisputeFormLink
	}
	if !IsNil(o.IsDirectCheckoutOnboarded) {
		toSerialize["is_direct_checkout_onboarded"] = o.IsDirectCheckoutOnboarded
	}
	if !IsNil(o.IsEtsyPaymentsOnboarded) {
		toSerialize["is_etsy_payments_onboarded"] = o.IsEtsyPaymentsOnboarded
	}
	if !IsNil(o.IsCalculatedEligible) {
		toSerialize["is_calculated_eligible"] = o.IsCalculatedEligible
	}
	if !IsNil(o.IsOptedInToBuyerPromise) {
		toSerialize["is_opted_in_to_buyer_promise"] = o.IsOptedInToBuyerPromise
	}
	if !IsNil(o.IsShopUsBased) {
		toSerialize["is_shop_us_based"] = o.IsShopUsBased
	}
	if !IsNil(o.TransactionSoldCount) {
		toSerialize["transaction_sold_count"] = o.TransactionSoldCount
	}
	if o.ShippingFromCountryIso.IsSet() {
		toSerialize["shipping_from_country_iso"] = o.ShippingFromCountryIso.Get()
	}
	if o.ShopLocationCountryIso.IsSet() {
		toSerialize["shop_location_country_iso"] = o.ShopLocationCountryIso.Get()
	}
	if o.ReviewCount.IsSet() {
		toSerialize["review_count"] = o.ReviewCount.Get()
	}
	if o.ReviewAverage.IsSet() {
		toSerialize["review_average"] = o.ReviewAverage.Get()
	}
	return toSerialize, nil
}

type NullableShop struct {
	value *Shop
	isSet bool
}

func (v NullableShop) Get() *Shop {
	return v.value
}

func (v *NullableShop) Set(val *Shop) {
	v.value = val
	v.isSet = true
}

func (v NullableShop) IsSet() bool {
	return v.isSet
}

func (v *NullableShop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShop(val *Shop) *NullableShop {
	return &NullableShop{value: val, isSet: true}
}

func (v NullableShop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


