/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ShopReceiptShipmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopReceiptShipmentsInner{}

// ShopReceiptShipmentsInner A list of shipment statements for this receipt.
type ShopReceiptShipmentsInner struct {
	// The unique numeric ID of a Shop Receipt Shipment record.
	ReceiptShippingId NullableInt32 `json:"receipt_shipping_id,omitempty"`
	// The time at which Etsy notified the buyer of the shipment event, in epoch seconds.
	ShipmentNotificationTimestamp *int32 `json:"shipment_notification_timestamp,omitempty"`
	// The name string for the carrier/company responsible for delivering the shipment.
	CarrierName *string `json:"carrier_name,omitempty"`
	// The tracking code string provided by the carrier/company for the shipment.
	TrackingCode *string `json:"tracking_code,omitempty"`
}

// NewShopReceiptShipmentsInner instantiates a new ShopReceiptShipmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopReceiptShipmentsInner() *ShopReceiptShipmentsInner {
	this := ShopReceiptShipmentsInner{}
	return &this
}

// NewShopReceiptShipmentsInnerWithDefaults instantiates a new ShopReceiptShipmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopReceiptShipmentsInnerWithDefaults() *ShopReceiptShipmentsInner {
	this := ShopReceiptShipmentsInner{}
	return &this
}

// GetReceiptShippingId returns the ReceiptShippingId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReceiptShipmentsInner) GetReceiptShippingId() int32 {
	if o == nil || IsNil(o.ReceiptShippingId.Get()) {
		var ret int32
		return ret
	}
	return *o.ReceiptShippingId.Get()
}

// GetReceiptShippingIdOk returns a tuple with the ReceiptShippingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReceiptShipmentsInner) GetReceiptShippingIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiptShippingId.Get(), o.ReceiptShippingId.IsSet()
}

// HasReceiptShippingId returns a boolean if a field has been set.
func (o *ShopReceiptShipmentsInner) HasReceiptShippingId() bool {
	if o != nil && o.ReceiptShippingId.IsSet() {
		return true
	}

	return false
}

// SetReceiptShippingId gets a reference to the given NullableInt32 and assigns it to the ReceiptShippingId field.
func (o *ShopReceiptShipmentsInner) SetReceiptShippingId(v int32) {
	o.ReceiptShippingId.Set(&v)
}
// SetReceiptShippingIdNil sets the value for ReceiptShippingId to be an explicit nil
func (o *ShopReceiptShipmentsInner) SetReceiptShippingIdNil() {
	o.ReceiptShippingId.Set(nil)
}

// UnsetReceiptShippingId ensures that no value is present for ReceiptShippingId, not even an explicit nil
func (o *ShopReceiptShipmentsInner) UnsetReceiptShippingId() {
	o.ReceiptShippingId.Unset()
}

// GetShipmentNotificationTimestamp returns the ShipmentNotificationTimestamp field value if set, zero value otherwise.
func (o *ShopReceiptShipmentsInner) GetShipmentNotificationTimestamp() int32 {
	if o == nil || IsNil(o.ShipmentNotificationTimestamp) {
		var ret int32
		return ret
	}
	return *o.ShipmentNotificationTimestamp
}

// GetShipmentNotificationTimestampOk returns a tuple with the ShipmentNotificationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptShipmentsInner) GetShipmentNotificationTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.ShipmentNotificationTimestamp) {
		return nil, false
	}
	return o.ShipmentNotificationTimestamp, true
}

// HasShipmentNotificationTimestamp returns a boolean if a field has been set.
func (o *ShopReceiptShipmentsInner) HasShipmentNotificationTimestamp() bool {
	if o != nil && !IsNil(o.ShipmentNotificationTimestamp) {
		return true
	}

	return false
}

// SetShipmentNotificationTimestamp gets a reference to the given int32 and assigns it to the ShipmentNotificationTimestamp field.
func (o *ShopReceiptShipmentsInner) SetShipmentNotificationTimestamp(v int32) {
	o.ShipmentNotificationTimestamp = &v
}

// GetCarrierName returns the CarrierName field value if set, zero value otherwise.
func (o *ShopReceiptShipmentsInner) GetCarrierName() string {
	if o == nil || IsNil(o.CarrierName) {
		var ret string
		return ret
	}
	return *o.CarrierName
}

// GetCarrierNameOk returns a tuple with the CarrierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptShipmentsInner) GetCarrierNameOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierName) {
		return nil, false
	}
	return o.CarrierName, true
}

// HasCarrierName returns a boolean if a field has been set.
func (o *ShopReceiptShipmentsInner) HasCarrierName() bool {
	if o != nil && !IsNil(o.CarrierName) {
		return true
	}

	return false
}

// SetCarrierName gets a reference to the given string and assigns it to the CarrierName field.
func (o *ShopReceiptShipmentsInner) SetCarrierName(v string) {
	o.CarrierName = &v
}

// GetTrackingCode returns the TrackingCode field value if set, zero value otherwise.
func (o *ShopReceiptShipmentsInner) GetTrackingCode() string {
	if o == nil || IsNil(o.TrackingCode) {
		var ret string
		return ret
	}
	return *o.TrackingCode
}

// GetTrackingCodeOk returns a tuple with the TrackingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReceiptShipmentsInner) GetTrackingCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingCode) {
		return nil, false
	}
	return o.TrackingCode, true
}

// HasTrackingCode returns a boolean if a field has been set.
func (o *ShopReceiptShipmentsInner) HasTrackingCode() bool {
	if o != nil && !IsNil(o.TrackingCode) {
		return true
	}

	return false
}

// SetTrackingCode gets a reference to the given string and assigns it to the TrackingCode field.
func (o *ShopReceiptShipmentsInner) SetTrackingCode(v string) {
	o.TrackingCode = &v
}

func (o ShopReceiptShipmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopReceiptShipmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ReceiptShippingId.IsSet() {
		toSerialize["receipt_shipping_id"] = o.ReceiptShippingId.Get()
	}
	if !IsNil(o.ShipmentNotificationTimestamp) {
		toSerialize["shipment_notification_timestamp"] = o.ShipmentNotificationTimestamp
	}
	if !IsNil(o.CarrierName) {
		toSerialize["carrier_name"] = o.CarrierName
	}
	if !IsNil(o.TrackingCode) {
		toSerialize["tracking_code"] = o.TrackingCode
	}
	return toSerialize, nil
}

type NullableShopReceiptShipmentsInner struct {
	value *ShopReceiptShipmentsInner
	isSet bool
}

func (v NullableShopReceiptShipmentsInner) Get() *ShopReceiptShipmentsInner {
	return v.value
}

func (v *NullableShopReceiptShipmentsInner) Set(val *ShopReceiptShipmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableShopReceiptShipmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableShopReceiptShipmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopReceiptShipmentsInner(val *ShopReceiptShipmentsInner) *NullableShopReceiptShipmentsInner {
	return &NullableShopReceiptShipmentsInner{value: val, isSet: true}
}

func (v NullableShopReceiptShipmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopReceiptShipmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


