/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListingVideo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListingVideo{}

// ListingVideo Reference urls and metadata for a video associated with a specific listing.
type ListingVideo struct {
	// The unique ID of a video associated with a listing.
	VideoId *int32 `json:"video_id,omitempty"`
	// The video height dimension in pixels.
	Height *int32 `json:"height,omitempty"`
	// The video width dimension in pixels.
	Width *int32 `json:"width,omitempty"`
	// The url of the video thumbnail.
	ThumbnailUrl *string `json:"thumbnail_url,omitempty"`
	// The url of the video file.
	VideoUrl *string `json:"video_url,omitempty"`
	// The current state of a given video. Value is one of `active`, `inactive`, `deleted` or `flagged`.
	VideoState *string `json:"video_state,omitempty"`
}

// NewListingVideo instantiates a new ListingVideo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListingVideo() *ListingVideo {
	this := ListingVideo{}
	return &this
}

// NewListingVideoWithDefaults instantiates a new ListingVideo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListingVideoWithDefaults() *ListingVideo {
	this := ListingVideo{}
	return &this
}

// GetVideoId returns the VideoId field value if set, zero value otherwise.
func (o *ListingVideo) GetVideoId() int32 {
	if o == nil || IsNil(o.VideoId) {
		var ret int32
		return ret
	}
	return *o.VideoId
}

// GetVideoIdOk returns a tuple with the VideoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVideo) GetVideoIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VideoId) {
		return nil, false
	}
	return o.VideoId, true
}

// HasVideoId returns a boolean if a field has been set.
func (o *ListingVideo) HasVideoId() bool {
	if o != nil && !IsNil(o.VideoId) {
		return true
	}

	return false
}

// SetVideoId gets a reference to the given int32 and assigns it to the VideoId field.
func (o *ListingVideo) SetVideoId(v int32) {
	o.VideoId = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ListingVideo) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVideo) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ListingVideo) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ListingVideo) SetHeight(v int32) {
	o.Height = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ListingVideo) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVideo) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ListingVideo) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *ListingVideo) SetWidth(v int32) {
	o.Width = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *ListingVideo) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVideo) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *ListingVideo) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *ListingVideo) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetVideoUrl returns the VideoUrl field value if set, zero value otherwise.
func (o *ListingVideo) GetVideoUrl() string {
	if o == nil || IsNil(o.VideoUrl) {
		var ret string
		return ret
	}
	return *o.VideoUrl
}

// GetVideoUrlOk returns a tuple with the VideoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVideo) GetVideoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VideoUrl) {
		return nil, false
	}
	return o.VideoUrl, true
}

// HasVideoUrl returns a boolean if a field has been set.
func (o *ListingVideo) HasVideoUrl() bool {
	if o != nil && !IsNil(o.VideoUrl) {
		return true
	}

	return false
}

// SetVideoUrl gets a reference to the given string and assigns it to the VideoUrl field.
func (o *ListingVideo) SetVideoUrl(v string) {
	o.VideoUrl = &v
}

// GetVideoState returns the VideoState field value if set, zero value otherwise.
func (o *ListingVideo) GetVideoState() string {
	if o == nil || IsNil(o.VideoState) {
		var ret string
		return ret
	}
	return *o.VideoState
}

// GetVideoStateOk returns a tuple with the VideoState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVideo) GetVideoStateOk() (*string, bool) {
	if o == nil || IsNil(o.VideoState) {
		return nil, false
	}
	return o.VideoState, true
}

// HasVideoState returns a boolean if a field has been set.
func (o *ListingVideo) HasVideoState() bool {
	if o != nil && !IsNil(o.VideoState) {
		return true
	}

	return false
}

// SetVideoState gets a reference to the given string and assigns it to the VideoState field.
func (o *ListingVideo) SetVideoState(v string) {
	o.VideoState = &v
}

func (o ListingVideo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListingVideo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VideoId) {
		toSerialize["video_id"] = o.VideoId
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl
	}
	if !IsNil(o.VideoUrl) {
		toSerialize["video_url"] = o.VideoUrl
	}
	if !IsNil(o.VideoState) {
		toSerialize["video_state"] = o.VideoState
	}
	return toSerialize, nil
}

type NullableListingVideo struct {
	value *ListingVideo
	isSet bool
}

func (v NullableListingVideo) Get() *ListingVideo {
	return v.value
}

func (v *NullableListingVideo) Set(val *ListingVideo) {
	v.value = val
	v.isSet = true
}

func (v NullableListingVideo) IsSet() bool {
	return v.isSet
}

func (v *NullableListingVideo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListingVideo(val *ListingVideo) *NullableListingVideo {
	return &NullableListingVideo{value: val, isSet: true}
}

func (v NullableListingVideo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListingVideo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


