/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ShopReturnPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopReturnPolicy{}

// ShopReturnPolicy Represents a listing-level return policy.
type ShopReturnPolicy struct {
	// The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
	ReturnPolicyId *int32 `json:"return_policy_id,omitempty"`
	// The unique positive non-zero numeric ID for an Etsy Shop.
	ShopId *int32 `json:"shop_id,omitempty"`
	// return_policy_accepts_returns
	AcceptsReturns *bool `json:"accepts_returns,omitempty"`
	// return_policy_accepts_exchanges
	AcceptsExchanges *bool `json:"accepts_exchanges,omitempty"`
	// The deadline for the Return Policy, measured in days. The value must be one of the following: [7, 14, 21, 30, 45, 60, 90].
	ReturnDeadline NullableInt32 `json:"return_deadline,omitempty"`
}

// NewShopReturnPolicy instantiates a new ShopReturnPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopReturnPolicy() *ShopReturnPolicy {
	this := ShopReturnPolicy{}
	return &this
}

// NewShopReturnPolicyWithDefaults instantiates a new ShopReturnPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopReturnPolicyWithDefaults() *ShopReturnPolicy {
	this := ShopReturnPolicy{}
	return &this
}

// GetReturnPolicyId returns the ReturnPolicyId field value if set, zero value otherwise.
func (o *ShopReturnPolicy) GetReturnPolicyId() int32 {
	if o == nil || IsNil(o.ReturnPolicyId) {
		var ret int32
		return ret
	}
	return *o.ReturnPolicyId
}

// GetReturnPolicyIdOk returns a tuple with the ReturnPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReturnPolicy) GetReturnPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReturnPolicyId) {
		return nil, false
	}
	return o.ReturnPolicyId, true
}

// HasReturnPolicyId returns a boolean if a field has been set.
func (o *ShopReturnPolicy) HasReturnPolicyId() bool {
	if o != nil && !IsNil(o.ReturnPolicyId) {
		return true
	}

	return false
}

// SetReturnPolicyId gets a reference to the given int32 and assigns it to the ReturnPolicyId field.
func (o *ShopReturnPolicy) SetReturnPolicyId(v int32) {
	o.ReturnPolicyId = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *ShopReturnPolicy) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReturnPolicy) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *ShopReturnPolicy) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *ShopReturnPolicy) SetShopId(v int32) {
	o.ShopId = &v
}

// GetAcceptsReturns returns the AcceptsReturns field value if set, zero value otherwise.
func (o *ShopReturnPolicy) GetAcceptsReturns() bool {
	if o == nil || IsNil(o.AcceptsReturns) {
		var ret bool
		return ret
	}
	return *o.AcceptsReturns
}

// GetAcceptsReturnsOk returns a tuple with the AcceptsReturns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReturnPolicy) GetAcceptsReturnsOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptsReturns) {
		return nil, false
	}
	return o.AcceptsReturns, true
}

// HasAcceptsReturns returns a boolean if a field has been set.
func (o *ShopReturnPolicy) HasAcceptsReturns() bool {
	if o != nil && !IsNil(o.AcceptsReturns) {
		return true
	}

	return false
}

// SetAcceptsReturns gets a reference to the given bool and assigns it to the AcceptsReturns field.
func (o *ShopReturnPolicy) SetAcceptsReturns(v bool) {
	o.AcceptsReturns = &v
}

// GetAcceptsExchanges returns the AcceptsExchanges field value if set, zero value otherwise.
func (o *ShopReturnPolicy) GetAcceptsExchanges() bool {
	if o == nil || IsNil(o.AcceptsExchanges) {
		var ret bool
		return ret
	}
	return *o.AcceptsExchanges
}

// GetAcceptsExchangesOk returns a tuple with the AcceptsExchanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopReturnPolicy) GetAcceptsExchangesOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptsExchanges) {
		return nil, false
	}
	return o.AcceptsExchanges, true
}

// HasAcceptsExchanges returns a boolean if a field has been set.
func (o *ShopReturnPolicy) HasAcceptsExchanges() bool {
	if o != nil && !IsNil(o.AcceptsExchanges) {
		return true
	}

	return false
}

// SetAcceptsExchanges gets a reference to the given bool and assigns it to the AcceptsExchanges field.
func (o *ShopReturnPolicy) SetAcceptsExchanges(v bool) {
	o.AcceptsExchanges = &v
}

// GetReturnDeadline returns the ReturnDeadline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopReturnPolicy) GetReturnDeadline() int32 {
	if o == nil || IsNil(o.ReturnDeadline.Get()) {
		var ret int32
		return ret
	}
	return *o.ReturnDeadline.Get()
}

// GetReturnDeadlineOk returns a tuple with the ReturnDeadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopReturnPolicy) GetReturnDeadlineOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnDeadline.Get(), o.ReturnDeadline.IsSet()
}

// HasReturnDeadline returns a boolean if a field has been set.
func (o *ShopReturnPolicy) HasReturnDeadline() bool {
	if o != nil && o.ReturnDeadline.IsSet() {
		return true
	}

	return false
}

// SetReturnDeadline gets a reference to the given NullableInt32 and assigns it to the ReturnDeadline field.
func (o *ShopReturnPolicy) SetReturnDeadline(v int32) {
	o.ReturnDeadline.Set(&v)
}
// SetReturnDeadlineNil sets the value for ReturnDeadline to be an explicit nil
func (o *ShopReturnPolicy) SetReturnDeadlineNil() {
	o.ReturnDeadline.Set(nil)
}

// UnsetReturnDeadline ensures that no value is present for ReturnDeadline, not even an explicit nil
func (o *ShopReturnPolicy) UnsetReturnDeadline() {
	o.ReturnDeadline.Unset()
}

func (o ShopReturnPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopReturnPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReturnPolicyId) {
		toSerialize["return_policy_id"] = o.ReturnPolicyId
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.AcceptsReturns) {
		toSerialize["accepts_returns"] = o.AcceptsReturns
	}
	if !IsNil(o.AcceptsExchanges) {
		toSerialize["accepts_exchanges"] = o.AcceptsExchanges
	}
	if o.ReturnDeadline.IsSet() {
		toSerialize["return_deadline"] = o.ReturnDeadline.Get()
	}
	return toSerialize, nil
}

type NullableShopReturnPolicy struct {
	value *ShopReturnPolicy
	isSet bool
}

func (v NullableShopReturnPolicy) Get() *ShopReturnPolicy {
	return v.value
}

func (v *NullableShopReturnPolicy) Set(val *ShopReturnPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableShopReturnPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableShopReturnPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopReturnPolicy(val *ShopReturnPolicy) *NullableShopReturnPolicy {
	return &NullableShopReturnPolicy{value: val, isSet: true}
}

func (v NullableShopReturnPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopReturnPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


