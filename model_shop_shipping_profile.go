/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ShopShippingProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopShippingProfile{}

// ShopShippingProfile Represents a profile used to set a listing's shipping information. Please note that it's not possible to create calculated shipping templates via the API. However, you can associate calculated shipping profiles created from Shop Manager with listings using the API.
type ShopShippingProfile struct {
	// The numeric ID of the shipping profile.
	ShippingProfileId *int32 `json:"shipping_profile_id,omitempty"`
	// The name string of this shipping profile.
	Title NullableString `json:"title,omitempty"`
	// The numeric ID for the [user](/documentation/reference#tag/User) who owns the shipping profile.
	UserId *int32 `json:"user_id,omitempty"`
	// The minimum number of days for processing the listing.
	MinProcessingDays NullableInt32 `json:"min_processing_days,omitempty"`
	// The maximum number of days for processing the listing.
	MaxProcessingDays NullableInt32 `json:"max_processing_days,omitempty"`
	// Translated display label string for processing days.
	ProcessingDaysDisplayLabel *string `json:"processing_days_display_label,omitempty"`
	// The ISO code of the country from which the listing ships.
	OriginCountryIso *string `json:"origin_country_iso,omitempty"`
	// When true, someone deleted this shipping profile.
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// A list of [shipping profile destinations](/documentation/reference/#operation/createShopShippingProfileDestination) available for this shipping profile.
	ShippingProfileDestinations []ShopShippingProfileShippingProfileDestinationsInner `json:"shipping_profile_destinations,omitempty"`
	// A list of [shipping profile upgrades](/documentation/reference/#operation/createShopShippingProfileUpgrade) available for this shipping profile.
	ShippingProfileUpgrades []ShopShippingProfileShippingProfileUpgradesInner `json:"shipping_profile_upgrades,omitempty"`
	// The postal code string (not necessarily a number) for the location from which the listing ships. Required if the `origin_country_iso` is `US` or `CA`.
	OriginPostalCode NullableString `json:"origin_postal_code,omitempty"`
	ProfileType *string `json:"profile_type,omitempty"`
	// The domestic handling fee added to buyer's shipping total - only available for calculated shipping profiles.
	DomesticHandlingFee *float32 `json:"domestic_handling_fee,omitempty"`
	// The international handling fee added to buyer's shipping total - only available for calculated shipping profiles.
	InternationalHandlingFee *float32 `json:"international_handling_fee,omitempty"`
}

// NewShopShippingProfile instantiates a new ShopShippingProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopShippingProfile() *ShopShippingProfile {
	this := ShopShippingProfile{}
	var domesticHandlingFee float32 = 0
	this.DomesticHandlingFee = &domesticHandlingFee
	var internationalHandlingFee float32 = 0
	this.InternationalHandlingFee = &internationalHandlingFee
	return &this
}

// NewShopShippingProfileWithDefaults instantiates a new ShopShippingProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopShippingProfileWithDefaults() *ShopShippingProfile {
	this := ShopShippingProfile{}
	var domesticHandlingFee float32 = 0
	this.DomesticHandlingFee = &domesticHandlingFee
	var internationalHandlingFee float32 = 0
	this.InternationalHandlingFee = &internationalHandlingFee
	return &this
}

// GetShippingProfileId returns the ShippingProfileId field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetShippingProfileId() int32 {
	if o == nil || IsNil(o.ShippingProfileId) {
		var ret int32
		return ret
	}
	return *o.ShippingProfileId
}

// GetShippingProfileIdOk returns a tuple with the ShippingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetShippingProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShippingProfileId) {
		return nil, false
	}
	return o.ShippingProfileId, true
}

// HasShippingProfileId returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasShippingProfileId() bool {
	if o != nil && !IsNil(o.ShippingProfileId) {
		return true
	}

	return false
}

// SetShippingProfileId gets a reference to the given int32 and assigns it to the ShippingProfileId field.
func (o *ShopShippingProfile) SetShippingProfileId(v int32) {
	o.ShippingProfileId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopShippingProfile) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopShippingProfile) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *ShopShippingProfile) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *ShopShippingProfile) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *ShopShippingProfile) UnsetTitle() {
	o.Title.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ShopShippingProfile) SetUserId(v int32) {
	o.UserId = &v
}

// GetMinProcessingDays returns the MinProcessingDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopShippingProfile) GetMinProcessingDays() int32 {
	if o == nil || IsNil(o.MinProcessingDays.Get()) {
		var ret int32
		return ret
	}
	return *o.MinProcessingDays.Get()
}

// GetMinProcessingDaysOk returns a tuple with the MinProcessingDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopShippingProfile) GetMinProcessingDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinProcessingDays.Get(), o.MinProcessingDays.IsSet()
}

// HasMinProcessingDays returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasMinProcessingDays() bool {
	if o != nil && o.MinProcessingDays.IsSet() {
		return true
	}

	return false
}

// SetMinProcessingDays gets a reference to the given NullableInt32 and assigns it to the MinProcessingDays field.
func (o *ShopShippingProfile) SetMinProcessingDays(v int32) {
	o.MinProcessingDays.Set(&v)
}
// SetMinProcessingDaysNil sets the value for MinProcessingDays to be an explicit nil
func (o *ShopShippingProfile) SetMinProcessingDaysNil() {
	o.MinProcessingDays.Set(nil)
}

// UnsetMinProcessingDays ensures that no value is present for MinProcessingDays, not even an explicit nil
func (o *ShopShippingProfile) UnsetMinProcessingDays() {
	o.MinProcessingDays.Unset()
}

// GetMaxProcessingDays returns the MaxProcessingDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopShippingProfile) GetMaxProcessingDays() int32 {
	if o == nil || IsNil(o.MaxProcessingDays.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxProcessingDays.Get()
}

// GetMaxProcessingDaysOk returns a tuple with the MaxProcessingDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopShippingProfile) GetMaxProcessingDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxProcessingDays.Get(), o.MaxProcessingDays.IsSet()
}

// HasMaxProcessingDays returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasMaxProcessingDays() bool {
	if o != nil && o.MaxProcessingDays.IsSet() {
		return true
	}

	return false
}

// SetMaxProcessingDays gets a reference to the given NullableInt32 and assigns it to the MaxProcessingDays field.
func (o *ShopShippingProfile) SetMaxProcessingDays(v int32) {
	o.MaxProcessingDays.Set(&v)
}
// SetMaxProcessingDaysNil sets the value for MaxProcessingDays to be an explicit nil
func (o *ShopShippingProfile) SetMaxProcessingDaysNil() {
	o.MaxProcessingDays.Set(nil)
}

// UnsetMaxProcessingDays ensures that no value is present for MaxProcessingDays, not even an explicit nil
func (o *ShopShippingProfile) UnsetMaxProcessingDays() {
	o.MaxProcessingDays.Unset()
}

// GetProcessingDaysDisplayLabel returns the ProcessingDaysDisplayLabel field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetProcessingDaysDisplayLabel() string {
	if o == nil || IsNil(o.ProcessingDaysDisplayLabel) {
		var ret string
		return ret
	}
	return *o.ProcessingDaysDisplayLabel
}

// GetProcessingDaysDisplayLabelOk returns a tuple with the ProcessingDaysDisplayLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetProcessingDaysDisplayLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessingDaysDisplayLabel) {
		return nil, false
	}
	return o.ProcessingDaysDisplayLabel, true
}

// HasProcessingDaysDisplayLabel returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasProcessingDaysDisplayLabel() bool {
	if o != nil && !IsNil(o.ProcessingDaysDisplayLabel) {
		return true
	}

	return false
}

// SetProcessingDaysDisplayLabel gets a reference to the given string and assigns it to the ProcessingDaysDisplayLabel field.
func (o *ShopShippingProfile) SetProcessingDaysDisplayLabel(v string) {
	o.ProcessingDaysDisplayLabel = &v
}

// GetOriginCountryIso returns the OriginCountryIso field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetOriginCountryIso() string {
	if o == nil || IsNil(o.OriginCountryIso) {
		var ret string
		return ret
	}
	return *o.OriginCountryIso
}

// GetOriginCountryIsoOk returns a tuple with the OriginCountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetOriginCountryIsoOk() (*string, bool) {
	if o == nil || IsNil(o.OriginCountryIso) {
		return nil, false
	}
	return o.OriginCountryIso, true
}

// HasOriginCountryIso returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasOriginCountryIso() bool {
	if o != nil && !IsNil(o.OriginCountryIso) {
		return true
	}

	return false
}

// SetOriginCountryIso gets a reference to the given string and assigns it to the OriginCountryIso field.
func (o *ShopShippingProfile) SetOriginCountryIso(v string) {
	o.OriginCountryIso = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *ShopShippingProfile) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetShippingProfileDestinations returns the ShippingProfileDestinations field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetShippingProfileDestinations() []ShopShippingProfileShippingProfileDestinationsInner {
	if o == nil || IsNil(o.ShippingProfileDestinations) {
		var ret []ShopShippingProfileShippingProfileDestinationsInner
		return ret
	}
	return o.ShippingProfileDestinations
}

// GetShippingProfileDestinationsOk returns a tuple with the ShippingProfileDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetShippingProfileDestinationsOk() ([]ShopShippingProfileShippingProfileDestinationsInner, bool) {
	if o == nil || IsNil(o.ShippingProfileDestinations) {
		return nil, false
	}
	return o.ShippingProfileDestinations, true
}

// HasShippingProfileDestinations returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasShippingProfileDestinations() bool {
	if o != nil && !IsNil(o.ShippingProfileDestinations) {
		return true
	}

	return false
}

// SetShippingProfileDestinations gets a reference to the given []ShopShippingProfileShippingProfileDestinationsInner and assigns it to the ShippingProfileDestinations field.
func (o *ShopShippingProfile) SetShippingProfileDestinations(v []ShopShippingProfileShippingProfileDestinationsInner) {
	o.ShippingProfileDestinations = v
}

// GetShippingProfileUpgrades returns the ShippingProfileUpgrades field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetShippingProfileUpgrades() []ShopShippingProfileShippingProfileUpgradesInner {
	if o == nil || IsNil(o.ShippingProfileUpgrades) {
		var ret []ShopShippingProfileShippingProfileUpgradesInner
		return ret
	}
	return o.ShippingProfileUpgrades
}

// GetShippingProfileUpgradesOk returns a tuple with the ShippingProfileUpgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetShippingProfileUpgradesOk() ([]ShopShippingProfileShippingProfileUpgradesInner, bool) {
	if o == nil || IsNil(o.ShippingProfileUpgrades) {
		return nil, false
	}
	return o.ShippingProfileUpgrades, true
}

// HasShippingProfileUpgrades returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasShippingProfileUpgrades() bool {
	if o != nil && !IsNil(o.ShippingProfileUpgrades) {
		return true
	}

	return false
}

// SetShippingProfileUpgrades gets a reference to the given []ShopShippingProfileShippingProfileUpgradesInner and assigns it to the ShippingProfileUpgrades field.
func (o *ShopShippingProfile) SetShippingProfileUpgrades(v []ShopShippingProfileShippingProfileUpgradesInner) {
	o.ShippingProfileUpgrades = v
}

// GetOriginPostalCode returns the OriginPostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShopShippingProfile) GetOriginPostalCode() string {
	if o == nil || IsNil(o.OriginPostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.OriginPostalCode.Get()
}

// GetOriginPostalCodeOk returns a tuple with the OriginPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShopShippingProfile) GetOriginPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginPostalCode.Get(), o.OriginPostalCode.IsSet()
}

// HasOriginPostalCode returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasOriginPostalCode() bool {
	if o != nil && o.OriginPostalCode.IsSet() {
		return true
	}

	return false
}

// SetOriginPostalCode gets a reference to the given NullableString and assigns it to the OriginPostalCode field.
func (o *ShopShippingProfile) SetOriginPostalCode(v string) {
	o.OriginPostalCode.Set(&v)
}
// SetOriginPostalCodeNil sets the value for OriginPostalCode to be an explicit nil
func (o *ShopShippingProfile) SetOriginPostalCodeNil() {
	o.OriginPostalCode.Set(nil)
}

// UnsetOriginPostalCode ensures that no value is present for OriginPostalCode, not even an explicit nil
func (o *ShopShippingProfile) UnsetOriginPostalCode() {
	o.OriginPostalCode.Unset()
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetProfileType() string {
	if o == nil || IsNil(o.ProfileType) {
		var ret string
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetProfileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given string and assigns it to the ProfileType field.
func (o *ShopShippingProfile) SetProfileType(v string) {
	o.ProfileType = &v
}

// GetDomesticHandlingFee returns the DomesticHandlingFee field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetDomesticHandlingFee() float32 {
	if o == nil || IsNil(o.DomesticHandlingFee) {
		var ret float32
		return ret
	}
	return *o.DomesticHandlingFee
}

// GetDomesticHandlingFeeOk returns a tuple with the DomesticHandlingFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetDomesticHandlingFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.DomesticHandlingFee) {
		return nil, false
	}
	return o.DomesticHandlingFee, true
}

// HasDomesticHandlingFee returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasDomesticHandlingFee() bool {
	if o != nil && !IsNil(o.DomesticHandlingFee) {
		return true
	}

	return false
}

// SetDomesticHandlingFee gets a reference to the given float32 and assigns it to the DomesticHandlingFee field.
func (o *ShopShippingProfile) SetDomesticHandlingFee(v float32) {
	o.DomesticHandlingFee = &v
}

// GetInternationalHandlingFee returns the InternationalHandlingFee field value if set, zero value otherwise.
func (o *ShopShippingProfile) GetInternationalHandlingFee() float32 {
	if o == nil || IsNil(o.InternationalHandlingFee) {
		var ret float32
		return ret
	}
	return *o.InternationalHandlingFee
}

// GetInternationalHandlingFeeOk returns a tuple with the InternationalHandlingFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopShippingProfile) GetInternationalHandlingFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.InternationalHandlingFee) {
		return nil, false
	}
	return o.InternationalHandlingFee, true
}

// HasInternationalHandlingFee returns a boolean if a field has been set.
func (o *ShopShippingProfile) HasInternationalHandlingFee() bool {
	if o != nil && !IsNil(o.InternationalHandlingFee) {
		return true
	}

	return false
}

// SetInternationalHandlingFee gets a reference to the given float32 and assigns it to the InternationalHandlingFee field.
func (o *ShopShippingProfile) SetInternationalHandlingFee(v float32) {
	o.InternationalHandlingFee = &v
}

func (o ShopShippingProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopShippingProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShippingProfileId) {
		toSerialize["shipping_profile_id"] = o.ShippingProfileId
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if o.MinProcessingDays.IsSet() {
		toSerialize["min_processing_days"] = o.MinProcessingDays.Get()
	}
	if o.MaxProcessingDays.IsSet() {
		toSerialize["max_processing_days"] = o.MaxProcessingDays.Get()
	}
	if !IsNil(o.ProcessingDaysDisplayLabel) {
		toSerialize["processing_days_display_label"] = o.ProcessingDaysDisplayLabel
	}
	if !IsNil(o.OriginCountryIso) {
		toSerialize["origin_country_iso"] = o.OriginCountryIso
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if !IsNil(o.ShippingProfileDestinations) {
		toSerialize["shipping_profile_destinations"] = o.ShippingProfileDestinations
	}
	if !IsNil(o.ShippingProfileUpgrades) {
		toSerialize["shipping_profile_upgrades"] = o.ShippingProfileUpgrades
	}
	if o.OriginPostalCode.IsSet() {
		toSerialize["origin_postal_code"] = o.OriginPostalCode.Get()
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profile_type"] = o.ProfileType
	}
	if !IsNil(o.DomesticHandlingFee) {
		toSerialize["domestic_handling_fee"] = o.DomesticHandlingFee
	}
	if !IsNil(o.InternationalHandlingFee) {
		toSerialize["international_handling_fee"] = o.InternationalHandlingFee
	}
	return toSerialize, nil
}

type NullableShopShippingProfile struct {
	value *ShopShippingProfile
	isSet bool
}

func (v NullableShopShippingProfile) Get() *ShopShippingProfile {
	return v.value
}

func (v *NullableShopShippingProfile) Set(val *ShopShippingProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableShopShippingProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableShopShippingProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopShippingProfile(val *ShopShippingProfile) *NullableShopShippingProfile {
	return &NullableShopShippingProfile{value: val, isSet: true}
}

func (v NullableShopShippingProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopShippingProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


