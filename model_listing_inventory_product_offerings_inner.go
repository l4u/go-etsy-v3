/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListingInventoryProductOfferingsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListingInventoryProductOfferingsInner{}

// ListingInventoryProductOfferingsInner A list of product offering entries for this product.
type ListingInventoryProductOfferingsInner struct {
	// The ID for the ProductOffering
	OfferingId *int32 `json:"offering_id,omitempty"`
	// The quantity the ProductOffering
	Quantity *int32 `json:"quantity,omitempty"`
	// Whether or not the offering can be shown to buyers.
	IsEnabled *bool `json:"is_enabled,omitempty"`
	// Whether or not the offering has been deleted.
	IsDeleted *bool `json:"is_deleted,omitempty"`
	Price *ListingInventoryProductOfferingPrice `json:"price,omitempty"`
}

// NewListingInventoryProductOfferingsInner instantiates a new ListingInventoryProductOfferingsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListingInventoryProductOfferingsInner() *ListingInventoryProductOfferingsInner {
	this := ListingInventoryProductOfferingsInner{}
	return &this
}

// NewListingInventoryProductOfferingsInnerWithDefaults instantiates a new ListingInventoryProductOfferingsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListingInventoryProductOfferingsInnerWithDefaults() *ListingInventoryProductOfferingsInner {
	this := ListingInventoryProductOfferingsInner{}
	return &this
}

// GetOfferingId returns the OfferingId field value if set, zero value otherwise.
func (o *ListingInventoryProductOfferingsInner) GetOfferingId() int32 {
	if o == nil || IsNil(o.OfferingId) {
		var ret int32
		return ret
	}
	return *o.OfferingId
}

// GetOfferingIdOk returns a tuple with the OfferingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingInventoryProductOfferingsInner) GetOfferingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfferingId) {
		return nil, false
	}
	return o.OfferingId, true
}

// HasOfferingId returns a boolean if a field has been set.
func (o *ListingInventoryProductOfferingsInner) HasOfferingId() bool {
	if o != nil && !IsNil(o.OfferingId) {
		return true
	}

	return false
}

// SetOfferingId gets a reference to the given int32 and assigns it to the OfferingId field.
func (o *ListingInventoryProductOfferingsInner) SetOfferingId(v int32) {
	o.OfferingId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ListingInventoryProductOfferingsInner) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingInventoryProductOfferingsInner) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ListingInventoryProductOfferingsInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ListingInventoryProductOfferingsInner) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *ListingInventoryProductOfferingsInner) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingInventoryProductOfferingsInner) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *ListingInventoryProductOfferingsInner) HasIsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *ListingInventoryProductOfferingsInner) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *ListingInventoryProductOfferingsInner) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingInventoryProductOfferingsInner) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ListingInventoryProductOfferingsInner) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *ListingInventoryProductOfferingsInner) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ListingInventoryProductOfferingsInner) GetPrice() ListingInventoryProductOfferingPrice {
	if o == nil || IsNil(o.Price) {
		var ret ListingInventoryProductOfferingPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingInventoryProductOfferingsInner) GetPriceOk() (*ListingInventoryProductOfferingPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ListingInventoryProductOfferingsInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given ListingInventoryProductOfferingPrice and assigns it to the Price field.
func (o *ListingInventoryProductOfferingsInner) SetPrice(v ListingInventoryProductOfferingPrice) {
	o.Price = &v
}

func (o ListingInventoryProductOfferingsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListingInventoryProductOfferingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OfferingId) {
		toSerialize["offering_id"] = o.OfferingId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.IsEnabled) {
		toSerialize["is_enabled"] = o.IsEnabled
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableListingInventoryProductOfferingsInner struct {
	value *ListingInventoryProductOfferingsInner
	isSet bool
}

func (v NullableListingInventoryProductOfferingsInner) Get() *ListingInventoryProductOfferingsInner {
	return v.value
}

func (v *NullableListingInventoryProductOfferingsInner) Set(val *ListingInventoryProductOfferingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListingInventoryProductOfferingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListingInventoryProductOfferingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListingInventoryProductOfferingsInner(val *ListingInventoryProductOfferingsInner) *NullableListingInventoryProductOfferingsInner {
	return &NullableListingInventoryProductOfferingsInner{value: val, isSet: true}
}

func (v NullableListingInventoryProductOfferingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListingInventoryProductOfferingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


