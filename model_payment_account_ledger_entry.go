/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentAccountLedgerEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentAccountLedgerEntry{}

// PaymentAccountLedgerEntry Represents an entry in a shop's ledger.
type PaymentAccountLedgerEntry struct {
	// The ledger entry's numeric ID.
	EntryId *int32 `json:"entry_id,omitempty"`
	// The ledger's numeric ID.
	LedgerId *int32 `json:"ledger_id,omitempty"`
	// The sequence allows ledger entries to be sorted chronologically. The higher the sequence, the more recent the entry.
	SequenceNumber *int32 `json:"sequence_number,omitempty"`
	// The amount of money credited to the ledger.
	Amount *int32 `json:"amount,omitempty"`
	// The currency of the entry on the ledger.
	Currency *string `json:"currency,omitempty"`
	// Details what kind of ledger entry this is: a payment, refund, reversal of a failed refund, disbursement, returned disbursement, recoupment, miscellaneous credit, miscellaneous debit, or bill payment.
	Description *string `json:"description,omitempty"`
	// The amount of money in the shop's ledger the moment after this entry was applied.
	Balance *int32 `json:"balance,omitempty"`
	// The date and time the ledger entry was created in Epoch seconds.
	CreateDate *int32 `json:"create_date,omitempty"`
	// The date and time the ledger entry was created in Epoch seconds.
	CreatedTimestamp *int32 `json:"created_timestamp,omitempty"`
	// The original reference type for the ledger entry.
	LedgerType *string `json:"ledger_type,omitempty"`
	// The object type the ledger entry refers to.
	ReferenceType *string `json:"reference_type,omitempty"`
	// The object id the ledger entry refers to.
	ReferenceId NullableString `json:"reference_id,omitempty"`
	// List of refund objects on an Etsy Payments transaction. All monetary amounts are in USD pennies unless otherwise specified.
	PaymentAdjustments []PaymentAccountLedgerEntryPaymentAdjustmentsInner `json:"payment_adjustments,omitempty"`
}

// NewPaymentAccountLedgerEntry instantiates a new PaymentAccountLedgerEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentAccountLedgerEntry() *PaymentAccountLedgerEntry {
	this := PaymentAccountLedgerEntry{}
	return &this
}

// NewPaymentAccountLedgerEntryWithDefaults instantiates a new PaymentAccountLedgerEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentAccountLedgerEntryWithDefaults() *PaymentAccountLedgerEntry {
	this := PaymentAccountLedgerEntry{}
	return &this
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetEntryId() int32 {
	if o == nil || IsNil(o.EntryId) {
		var ret int32
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetEntryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntryId) {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasEntryId() bool {
	if o != nil && !IsNil(o.EntryId) {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given int32 and assigns it to the EntryId field.
func (o *PaymentAccountLedgerEntry) SetEntryId(v int32) {
	o.EntryId = &v
}

// GetLedgerId returns the LedgerId field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetLedgerId() int32 {
	if o == nil || IsNil(o.LedgerId) {
		var ret int32
		return ret
	}
	return *o.LedgerId
}

// GetLedgerIdOk returns a tuple with the LedgerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetLedgerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LedgerId) {
		return nil, false
	}
	return o.LedgerId, true
}

// HasLedgerId returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasLedgerId() bool {
	if o != nil && !IsNil(o.LedgerId) {
		return true
	}

	return false
}

// SetLedgerId gets a reference to the given int32 and assigns it to the LedgerId field.
func (o *PaymentAccountLedgerEntry) SetLedgerId(v int32) {
	o.LedgerId = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetSequenceNumber() int32 {
	if o == nil || IsNil(o.SequenceNumber) {
		var ret int32
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetSequenceNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.SequenceNumber) {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasSequenceNumber() bool {
	if o != nil && !IsNil(o.SequenceNumber) {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int32 and assigns it to the SequenceNumber field.
func (o *PaymentAccountLedgerEntry) SetSequenceNumber(v int32) {
	o.SequenceNumber = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetAmount() int32 {
	if o == nil || IsNil(o.Amount) {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *PaymentAccountLedgerEntry) SetAmount(v int32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaymentAccountLedgerEntry) SetCurrency(v string) {
	o.Currency = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentAccountLedgerEntry) SetDescription(v string) {
	o.Description = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetBalance() int32 {
	if o == nil || IsNil(o.Balance) {
		var ret int32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetBalanceOk() (*int32, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given int32 and assigns it to the Balance field.
func (o *PaymentAccountLedgerEntry) SetBalance(v int32) {
	o.Balance = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetCreateDate() int32 {
	if o == nil || IsNil(o.CreateDate) {
		var ret int32
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetCreateDateOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given int32 and assigns it to the CreateDate field.
func (o *PaymentAccountLedgerEntry) SetCreateDate(v int32) {
	o.CreateDate = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetCreatedTimestamp() int32 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int32 and assigns it to the CreatedTimestamp field.
func (o *PaymentAccountLedgerEntry) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = &v
}

// GetLedgerType returns the LedgerType field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetLedgerType() string {
	if o == nil || IsNil(o.LedgerType) {
		var ret string
		return ret
	}
	return *o.LedgerType
}

// GetLedgerTypeOk returns a tuple with the LedgerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetLedgerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LedgerType) {
		return nil, false
	}
	return o.LedgerType, true
}

// HasLedgerType returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasLedgerType() bool {
	if o != nil && !IsNil(o.LedgerType) {
		return true
	}

	return false
}

// SetLedgerType gets a reference to the given string and assigns it to the LedgerType field.
func (o *PaymentAccountLedgerEntry) SetLedgerType(v string) {
	o.LedgerType = &v
}

// GetReferenceType returns the ReferenceType field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetReferenceType() string {
	if o == nil || IsNil(o.ReferenceType) {
		var ret string
		return ret
	}
	return *o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetReferenceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceType) {
		return nil, false
	}
	return o.ReferenceType, true
}

// HasReferenceType returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasReferenceType() bool {
	if o != nil && !IsNil(o.ReferenceType) {
		return true
	}

	return false
}

// SetReferenceType gets a reference to the given string and assigns it to the ReferenceType field.
func (o *PaymentAccountLedgerEntry) SetReferenceType(v string) {
	o.ReferenceType = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentAccountLedgerEntry) GetReferenceId() string {
	if o == nil || IsNil(o.ReferenceId.Get()) {
		var ret string
		return ret
	}
	return *o.ReferenceId.Get()
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentAccountLedgerEntry) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceId.Get(), o.ReferenceId.IsSet()
}

// HasReferenceId returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasReferenceId() bool {
	if o != nil && o.ReferenceId.IsSet() {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given NullableString and assigns it to the ReferenceId field.
func (o *PaymentAccountLedgerEntry) SetReferenceId(v string) {
	o.ReferenceId.Set(&v)
}
// SetReferenceIdNil sets the value for ReferenceId to be an explicit nil
func (o *PaymentAccountLedgerEntry) SetReferenceIdNil() {
	o.ReferenceId.Set(nil)
}

// UnsetReferenceId ensures that no value is present for ReferenceId, not even an explicit nil
func (o *PaymentAccountLedgerEntry) UnsetReferenceId() {
	o.ReferenceId.Unset()
}

// GetPaymentAdjustments returns the PaymentAdjustments field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntry) GetPaymentAdjustments() []PaymentAccountLedgerEntryPaymentAdjustmentsInner {
	if o == nil || IsNil(o.PaymentAdjustments) {
		var ret []PaymentAccountLedgerEntryPaymentAdjustmentsInner
		return ret
	}
	return o.PaymentAdjustments
}

// GetPaymentAdjustmentsOk returns a tuple with the PaymentAdjustments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntry) GetPaymentAdjustmentsOk() ([]PaymentAccountLedgerEntryPaymentAdjustmentsInner, bool) {
	if o == nil || IsNil(o.PaymentAdjustments) {
		return nil, false
	}
	return o.PaymentAdjustments, true
}

// HasPaymentAdjustments returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntry) HasPaymentAdjustments() bool {
	if o != nil && !IsNil(o.PaymentAdjustments) {
		return true
	}

	return false
}

// SetPaymentAdjustments gets a reference to the given []PaymentAccountLedgerEntryPaymentAdjustmentsInner and assigns it to the PaymentAdjustments field.
func (o *PaymentAccountLedgerEntry) SetPaymentAdjustments(v []PaymentAccountLedgerEntryPaymentAdjustmentsInner) {
	o.PaymentAdjustments = v
}

func (o PaymentAccountLedgerEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentAccountLedgerEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryId) {
		toSerialize["entry_id"] = o.EntryId
	}
	if !IsNil(o.LedgerId) {
		toSerialize["ledger_id"] = o.LedgerId
	}
	if !IsNil(o.SequenceNumber) {
		toSerialize["sequence_number"] = o.SequenceNumber
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.CreateDate) {
		toSerialize["create_date"] = o.CreateDate
	}
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if !IsNil(o.LedgerType) {
		toSerialize["ledger_type"] = o.LedgerType
	}
	if !IsNil(o.ReferenceType) {
		toSerialize["reference_type"] = o.ReferenceType
	}
	if o.ReferenceId.IsSet() {
		toSerialize["reference_id"] = o.ReferenceId.Get()
	}
	if !IsNil(o.PaymentAdjustments) {
		toSerialize["payment_adjustments"] = o.PaymentAdjustments
	}
	return toSerialize, nil
}

type NullablePaymentAccountLedgerEntry struct {
	value *PaymentAccountLedgerEntry
	isSet bool
}

func (v NullablePaymentAccountLedgerEntry) Get() *PaymentAccountLedgerEntry {
	return v.value
}

func (v *NullablePaymentAccountLedgerEntry) Set(val *PaymentAccountLedgerEntry) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentAccountLedgerEntry) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentAccountLedgerEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentAccountLedgerEntry(val *PaymentAccountLedgerEntry) *NullablePaymentAccountLedgerEntry {
	return &NullablePaymentAccountLedgerEntry{value: val, isSet: true}
}

func (v NullablePaymentAccountLedgerEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentAccountLedgerEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


