/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateListingInventoryRequestProductsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateListingInventoryRequestProductsInner{}

// UpdateListingInventoryRequestProductsInner struct for UpdateListingInventoryRequestProductsInner
type UpdateListingInventoryRequestProductsInner struct {
	// The SKU string for the product
	Sku NullableString `json:"sku,omitempty"`
	// A list of property value entries for this product. Note: parenthesis characters (`(` and `)`) are not allowed.
	PropertyValues []UpdateListingInventoryRequestProductsInnerPropertyValuesInner `json:"property_values,omitempty"`
	// A list of product offering entries for this product.
	Offerings []UpdateListingInventoryRequestProductsInnerOfferingsInner `json:"offerings"`
}

// NewUpdateListingInventoryRequestProductsInner instantiates a new UpdateListingInventoryRequestProductsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateListingInventoryRequestProductsInner(offerings []UpdateListingInventoryRequestProductsInnerOfferingsInner) *UpdateListingInventoryRequestProductsInner {
	this := UpdateListingInventoryRequestProductsInner{}
	this.Offerings = offerings
	return &this
}

// NewUpdateListingInventoryRequestProductsInnerWithDefaults instantiates a new UpdateListingInventoryRequestProductsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateListingInventoryRequestProductsInnerWithDefaults() *UpdateListingInventoryRequestProductsInner {
	this := UpdateListingInventoryRequestProductsInner{}
	return &this
}

// GetSku returns the Sku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateListingInventoryRequestProductsInner) GetSku() string {
	if o == nil || IsNil(o.Sku.Get()) {
		var ret string
		return ret
	}
	return *o.Sku.Get()
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateListingInventoryRequestProductsInner) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sku.Get(), o.Sku.IsSet()
}

// HasSku returns a boolean if a field has been set.
func (o *UpdateListingInventoryRequestProductsInner) HasSku() bool {
	if o != nil && o.Sku.IsSet() {
		return true
	}

	return false
}

// SetSku gets a reference to the given NullableString and assigns it to the Sku field.
func (o *UpdateListingInventoryRequestProductsInner) SetSku(v string) {
	o.Sku.Set(&v)
}
// SetSkuNil sets the value for Sku to be an explicit nil
func (o *UpdateListingInventoryRequestProductsInner) SetSkuNil() {
	o.Sku.Set(nil)
}

// UnsetSku ensures that no value is present for Sku, not even an explicit nil
func (o *UpdateListingInventoryRequestProductsInner) UnsetSku() {
	o.Sku.Unset()
}

// GetPropertyValues returns the PropertyValues field value if set, zero value otherwise.
func (o *UpdateListingInventoryRequestProductsInner) GetPropertyValues() []UpdateListingInventoryRequestProductsInnerPropertyValuesInner {
	if o == nil || IsNil(o.PropertyValues) {
		var ret []UpdateListingInventoryRequestProductsInnerPropertyValuesInner
		return ret
	}
	return o.PropertyValues
}

// GetPropertyValuesOk returns a tuple with the PropertyValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListingInventoryRequestProductsInner) GetPropertyValuesOk() ([]UpdateListingInventoryRequestProductsInnerPropertyValuesInner, bool) {
	if o == nil || IsNil(o.PropertyValues) {
		return nil, false
	}
	return o.PropertyValues, true
}

// HasPropertyValues returns a boolean if a field has been set.
func (o *UpdateListingInventoryRequestProductsInner) HasPropertyValues() bool {
	if o != nil && !IsNil(o.PropertyValues) {
		return true
	}

	return false
}

// SetPropertyValues gets a reference to the given []UpdateListingInventoryRequestProductsInnerPropertyValuesInner and assigns it to the PropertyValues field.
func (o *UpdateListingInventoryRequestProductsInner) SetPropertyValues(v []UpdateListingInventoryRequestProductsInnerPropertyValuesInner) {
	o.PropertyValues = v
}

// GetOfferings returns the Offerings field value
func (o *UpdateListingInventoryRequestProductsInner) GetOfferings() []UpdateListingInventoryRequestProductsInnerOfferingsInner {
	if o == nil {
		var ret []UpdateListingInventoryRequestProductsInnerOfferingsInner
		return ret
	}

	return o.Offerings
}

// GetOfferingsOk returns a tuple with the Offerings field value
// and a boolean to check if the value has been set.
func (o *UpdateListingInventoryRequestProductsInner) GetOfferingsOk() ([]UpdateListingInventoryRequestProductsInnerOfferingsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Offerings, true
}

// SetOfferings sets field value
func (o *UpdateListingInventoryRequestProductsInner) SetOfferings(v []UpdateListingInventoryRequestProductsInnerOfferingsInner) {
	o.Offerings = v
}

func (o UpdateListingInventoryRequestProductsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateListingInventoryRequestProductsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Sku.IsSet() {
		toSerialize["sku"] = o.Sku.Get()
	}
	if !IsNil(o.PropertyValues) {
		toSerialize["property_values"] = o.PropertyValues
	}
	toSerialize["offerings"] = o.Offerings
	return toSerialize, nil
}

type NullableUpdateListingInventoryRequestProductsInner struct {
	value *UpdateListingInventoryRequestProductsInner
	isSet bool
}

func (v NullableUpdateListingInventoryRequestProductsInner) Get() *UpdateListingInventoryRequestProductsInner {
	return v.value
}

func (v *NullableUpdateListingInventoryRequestProductsInner) Set(val *UpdateListingInventoryRequestProductsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateListingInventoryRequestProductsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateListingInventoryRequestProductsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateListingInventoryRequestProductsInner(val *UpdateListingInventoryRequestProductsInner) *NullableUpdateListingInventoryRequestProductsInner {
	return &NullableUpdateListingInventoryRequestProductsInner{value: val, isSet: true}
}

func (v NullableUpdateListingInventoryRequestProductsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateListingInventoryRequestProductsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


