/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentAccountLedgerEntryPaymentAdjustmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentAccountLedgerEntryPaymentAdjustmentsInner{}

// PaymentAccountLedgerEntryPaymentAdjustmentsInner List of refund objects on an Etsy Payments transaction. All monetary amounts are in USD pennies unless otherwise specified.
type PaymentAccountLedgerEntryPaymentAdjustmentsInner struct {
	// The numeric ID for a payment adjustment.
	PaymentAdjustmentId *int32 `json:"payment_adjustment_id,omitempty"`
	// A unique numeric ID for a payment to a specific Etsy [shop](/documentation/reference#tag/Shop).
	PaymentId *int32 `json:"payment_id,omitempty"`
	// The status string of the payment adjustment.
	Status *string `json:"status,omitempty"`
	// When true, the payment adjustment was or is likely to complete successfully.
	IsSuccess *bool `json:"is_success,omitempty"`
	// The numeric ID for the [user](/documentation/reference#tag/User) (seller) fulfilling the purchase.
	UserId *int32 `json:"user_id,omitempty"`
	// A human-readable string describing the reason for the refund.
	ReasonCode *string `json:"reason_code,omitempty"`
	// The total numeric amount of the refund in the payment currency.
	TotalAdjustmentAmount NullableInt32 `json:"total_adjustment_amount,omitempty"`
	// The numeric amount of the refund in the shop currency.
	ShopTotalAdjustmentAmount NullableInt32 `json:"shop_total_adjustment_amount,omitempty"`
	// The numeric amount of the refund in the buyer currency.
	BuyerTotalAdjustmentAmount NullableInt32 `json:"buyer_total_adjustment_amount,omitempty"`
	// The numeric amount of card processing fees associated with a payment adjustment.
	TotalFeeAdjustmentAmount NullableInt32 `json:"total_fee_adjustment_amount,omitempty"`
	// The transaction\\'s creation date and time, in epoch seconds.
	CreateTimestamp *int32 `json:"create_timestamp,omitempty"`
	// The transaction\\'s creation date and time, in epoch seconds.
	CreatedTimestamp *int32 `json:"created_timestamp,omitempty"`
	// The date and time of the last change to the payment adjustment in epoch seconds.
	UpdateTimestamp *int32 `json:"update_timestamp,omitempty"`
	// The date and time of the last change to the payment adjustment in epoch seconds.
	UpdatedTimestamp *int32 `json:"updated_timestamp,omitempty"`
	// List of payment adjustment line items.
	PaymentAdjustmentItems []PaymentAdjustmentPaymentAdjustmentItemsInner `json:"payment_adjustment_items,omitempty"`
}

// NewPaymentAccountLedgerEntryPaymentAdjustmentsInner instantiates a new PaymentAccountLedgerEntryPaymentAdjustmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentAccountLedgerEntryPaymentAdjustmentsInner() *PaymentAccountLedgerEntryPaymentAdjustmentsInner {
	this := PaymentAccountLedgerEntryPaymentAdjustmentsInner{}
	return &this
}

// NewPaymentAccountLedgerEntryPaymentAdjustmentsInnerWithDefaults instantiates a new PaymentAccountLedgerEntryPaymentAdjustmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentAccountLedgerEntryPaymentAdjustmentsInnerWithDefaults() *PaymentAccountLedgerEntryPaymentAdjustmentsInner {
	this := PaymentAccountLedgerEntryPaymentAdjustmentsInner{}
	return &this
}

// GetPaymentAdjustmentId returns the PaymentAdjustmentId field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetPaymentAdjustmentId() int32 {
	if o == nil || IsNil(o.PaymentAdjustmentId) {
		var ret int32
		return ret
	}
	return *o.PaymentAdjustmentId
}

// GetPaymentAdjustmentIdOk returns a tuple with the PaymentAdjustmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetPaymentAdjustmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentAdjustmentId) {
		return nil, false
	}
	return o.PaymentAdjustmentId, true
}

// HasPaymentAdjustmentId returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasPaymentAdjustmentId() bool {
	if o != nil && !IsNil(o.PaymentAdjustmentId) {
		return true
	}

	return false
}

// SetPaymentAdjustmentId gets a reference to the given int32 and assigns it to the PaymentAdjustmentId field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetPaymentAdjustmentId(v int32) {
	o.PaymentAdjustmentId = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetPaymentId() int32 {
	if o == nil || IsNil(o.PaymentId) {
		var ret int32
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetPaymentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given int32 and assigns it to the PaymentId field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetPaymentId(v int32) {
	o.PaymentId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetStatus(v string) {
	o.Status = &v
}

// GetIsSuccess returns the IsSuccess field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetIsSuccess() bool {
	if o == nil || IsNil(o.IsSuccess) {
		var ret bool
		return ret
	}
	return *o.IsSuccess
}

// GetIsSuccessOk returns a tuple with the IsSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetIsSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuccess) {
		return nil, false
	}
	return o.IsSuccess, true
}

// HasIsSuccess returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasIsSuccess() bool {
	if o != nil && !IsNil(o.IsSuccess) {
		return true
	}

	return false
}

// SetIsSuccess gets a reference to the given bool and assigns it to the IsSuccess field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetIsSuccess(v bool) {
	o.IsSuccess = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetUserId(v int32) {
	o.UserId = &v
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetReasonCode() string {
	if o == nil || IsNil(o.ReasonCode) {
		var ret string
		return ret
	}
	return *o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonCode) {
		return nil, false
	}
	return o.ReasonCode, true
}

// HasReasonCode returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasReasonCode() bool {
	if o != nil && !IsNil(o.ReasonCode) {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given string and assigns it to the ReasonCode field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetReasonCode(v string) {
	o.ReasonCode = &v
}

// GetTotalAdjustmentAmount returns the TotalAdjustmentAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetTotalAdjustmentAmount() int32 {
	if o == nil || IsNil(o.TotalAdjustmentAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalAdjustmentAmount.Get()
}

// GetTotalAdjustmentAmountOk returns a tuple with the TotalAdjustmentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetTotalAdjustmentAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalAdjustmentAmount.Get(), o.TotalAdjustmentAmount.IsSet()
}

// HasTotalAdjustmentAmount returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasTotalAdjustmentAmount() bool {
	if o != nil && o.TotalAdjustmentAmount.IsSet() {
		return true
	}

	return false
}

// SetTotalAdjustmentAmount gets a reference to the given NullableInt32 and assigns it to the TotalAdjustmentAmount field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetTotalAdjustmentAmount(v int32) {
	o.TotalAdjustmentAmount.Set(&v)
}
// SetTotalAdjustmentAmountNil sets the value for TotalAdjustmentAmount to be an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetTotalAdjustmentAmountNil() {
	o.TotalAdjustmentAmount.Set(nil)
}

// UnsetTotalAdjustmentAmount ensures that no value is present for TotalAdjustmentAmount, not even an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) UnsetTotalAdjustmentAmount() {
	o.TotalAdjustmentAmount.Unset()
}

// GetShopTotalAdjustmentAmount returns the ShopTotalAdjustmentAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetShopTotalAdjustmentAmount() int32 {
	if o == nil || IsNil(o.ShopTotalAdjustmentAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.ShopTotalAdjustmentAmount.Get()
}

// GetShopTotalAdjustmentAmountOk returns a tuple with the ShopTotalAdjustmentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetShopTotalAdjustmentAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShopTotalAdjustmentAmount.Get(), o.ShopTotalAdjustmentAmount.IsSet()
}

// HasShopTotalAdjustmentAmount returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasShopTotalAdjustmentAmount() bool {
	if o != nil && o.ShopTotalAdjustmentAmount.IsSet() {
		return true
	}

	return false
}

// SetShopTotalAdjustmentAmount gets a reference to the given NullableInt32 and assigns it to the ShopTotalAdjustmentAmount field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetShopTotalAdjustmentAmount(v int32) {
	o.ShopTotalAdjustmentAmount.Set(&v)
}
// SetShopTotalAdjustmentAmountNil sets the value for ShopTotalAdjustmentAmount to be an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetShopTotalAdjustmentAmountNil() {
	o.ShopTotalAdjustmentAmount.Set(nil)
}

// UnsetShopTotalAdjustmentAmount ensures that no value is present for ShopTotalAdjustmentAmount, not even an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) UnsetShopTotalAdjustmentAmount() {
	o.ShopTotalAdjustmentAmount.Unset()
}

// GetBuyerTotalAdjustmentAmount returns the BuyerTotalAdjustmentAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetBuyerTotalAdjustmentAmount() int32 {
	if o == nil || IsNil(o.BuyerTotalAdjustmentAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.BuyerTotalAdjustmentAmount.Get()
}

// GetBuyerTotalAdjustmentAmountOk returns a tuple with the BuyerTotalAdjustmentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetBuyerTotalAdjustmentAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BuyerTotalAdjustmentAmount.Get(), o.BuyerTotalAdjustmentAmount.IsSet()
}

// HasBuyerTotalAdjustmentAmount returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasBuyerTotalAdjustmentAmount() bool {
	if o != nil && o.BuyerTotalAdjustmentAmount.IsSet() {
		return true
	}

	return false
}

// SetBuyerTotalAdjustmentAmount gets a reference to the given NullableInt32 and assigns it to the BuyerTotalAdjustmentAmount field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetBuyerTotalAdjustmentAmount(v int32) {
	o.BuyerTotalAdjustmentAmount.Set(&v)
}
// SetBuyerTotalAdjustmentAmountNil sets the value for BuyerTotalAdjustmentAmount to be an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetBuyerTotalAdjustmentAmountNil() {
	o.BuyerTotalAdjustmentAmount.Set(nil)
}

// UnsetBuyerTotalAdjustmentAmount ensures that no value is present for BuyerTotalAdjustmentAmount, not even an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) UnsetBuyerTotalAdjustmentAmount() {
	o.BuyerTotalAdjustmentAmount.Unset()
}

// GetTotalFeeAdjustmentAmount returns the TotalFeeAdjustmentAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetTotalFeeAdjustmentAmount() int32 {
	if o == nil || IsNil(o.TotalFeeAdjustmentAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalFeeAdjustmentAmount.Get()
}

// GetTotalFeeAdjustmentAmountOk returns a tuple with the TotalFeeAdjustmentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetTotalFeeAdjustmentAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalFeeAdjustmentAmount.Get(), o.TotalFeeAdjustmentAmount.IsSet()
}

// HasTotalFeeAdjustmentAmount returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasTotalFeeAdjustmentAmount() bool {
	if o != nil && o.TotalFeeAdjustmentAmount.IsSet() {
		return true
	}

	return false
}

// SetTotalFeeAdjustmentAmount gets a reference to the given NullableInt32 and assigns it to the TotalFeeAdjustmentAmount field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetTotalFeeAdjustmentAmount(v int32) {
	o.TotalFeeAdjustmentAmount.Set(&v)
}
// SetTotalFeeAdjustmentAmountNil sets the value for TotalFeeAdjustmentAmount to be an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetTotalFeeAdjustmentAmountNil() {
	o.TotalFeeAdjustmentAmount.Set(nil)
}

// UnsetTotalFeeAdjustmentAmount ensures that no value is present for TotalFeeAdjustmentAmount, not even an explicit nil
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) UnsetTotalFeeAdjustmentAmount() {
	o.TotalFeeAdjustmentAmount.Unset()
}

// GetCreateTimestamp returns the CreateTimestamp field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetCreateTimestamp() int32 {
	if o == nil || IsNil(o.CreateTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreateTimestamp
}

// GetCreateTimestampOk returns a tuple with the CreateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetCreateTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateTimestamp) {
		return nil, false
	}
	return o.CreateTimestamp, true
}

// HasCreateTimestamp returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasCreateTimestamp() bool {
	if o != nil && !IsNil(o.CreateTimestamp) {
		return true
	}

	return false
}

// SetCreateTimestamp gets a reference to the given int32 and assigns it to the CreateTimestamp field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetCreateTimestamp(v int32) {
	o.CreateTimestamp = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetCreatedTimestamp() int32 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int32 and assigns it to the CreatedTimestamp field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = &v
}

// GetUpdateTimestamp returns the UpdateTimestamp field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetUpdateTimestamp() int32 {
	if o == nil || IsNil(o.UpdateTimestamp) {
		var ret int32
		return ret
	}
	return *o.UpdateTimestamp
}

// GetUpdateTimestampOk returns a tuple with the UpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetUpdateTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdateTimestamp) {
		return nil, false
	}
	return o.UpdateTimestamp, true
}

// HasUpdateTimestamp returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasUpdateTimestamp() bool {
	if o != nil && !IsNil(o.UpdateTimestamp) {
		return true
	}

	return false
}

// SetUpdateTimestamp gets a reference to the given int32 and assigns it to the UpdateTimestamp field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetUpdateTimestamp(v int32) {
	o.UpdateTimestamp = &v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetUpdatedTimestamp() int32 {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetUpdatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		return nil, false
	}
	return o.UpdatedTimestamp, true
}

// HasUpdatedTimestamp returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasUpdatedTimestamp() bool {
	if o != nil && !IsNil(o.UpdatedTimestamp) {
		return true
	}

	return false
}

// SetUpdatedTimestamp gets a reference to the given int32 and assigns it to the UpdatedTimestamp field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetUpdatedTimestamp(v int32) {
	o.UpdatedTimestamp = &v
}

// GetPaymentAdjustmentItems returns the PaymentAdjustmentItems field value if set, zero value otherwise.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetPaymentAdjustmentItems() []PaymentAdjustmentPaymentAdjustmentItemsInner {
	if o == nil || IsNil(o.PaymentAdjustmentItems) {
		var ret []PaymentAdjustmentPaymentAdjustmentItemsInner
		return ret
	}
	return o.PaymentAdjustmentItems
}

// GetPaymentAdjustmentItemsOk returns a tuple with the PaymentAdjustmentItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) GetPaymentAdjustmentItemsOk() ([]PaymentAdjustmentPaymentAdjustmentItemsInner, bool) {
	if o == nil || IsNil(o.PaymentAdjustmentItems) {
		return nil, false
	}
	return o.PaymentAdjustmentItems, true
}

// HasPaymentAdjustmentItems returns a boolean if a field has been set.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) HasPaymentAdjustmentItems() bool {
	if o != nil && !IsNil(o.PaymentAdjustmentItems) {
		return true
	}

	return false
}

// SetPaymentAdjustmentItems gets a reference to the given []PaymentAdjustmentPaymentAdjustmentItemsInner and assigns it to the PaymentAdjustmentItems field.
func (o *PaymentAccountLedgerEntryPaymentAdjustmentsInner) SetPaymentAdjustmentItems(v []PaymentAdjustmentPaymentAdjustmentItemsInner) {
	o.PaymentAdjustmentItems = v
}

func (o PaymentAccountLedgerEntryPaymentAdjustmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentAccountLedgerEntryPaymentAdjustmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentAdjustmentId) {
		toSerialize["payment_adjustment_id"] = o.PaymentAdjustmentId
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IsSuccess) {
		toSerialize["is_success"] = o.IsSuccess
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.ReasonCode) {
		toSerialize["reason_code"] = o.ReasonCode
	}
	if o.TotalAdjustmentAmount.IsSet() {
		toSerialize["total_adjustment_amount"] = o.TotalAdjustmentAmount.Get()
	}
	if o.ShopTotalAdjustmentAmount.IsSet() {
		toSerialize["shop_total_adjustment_amount"] = o.ShopTotalAdjustmentAmount.Get()
	}
	if o.BuyerTotalAdjustmentAmount.IsSet() {
		toSerialize["buyer_total_adjustment_amount"] = o.BuyerTotalAdjustmentAmount.Get()
	}
	if o.TotalFeeAdjustmentAmount.IsSet() {
		toSerialize["total_fee_adjustment_amount"] = o.TotalFeeAdjustmentAmount.Get()
	}
	if !IsNil(o.CreateTimestamp) {
		toSerialize["create_timestamp"] = o.CreateTimestamp
	}
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if !IsNil(o.UpdateTimestamp) {
		toSerialize["update_timestamp"] = o.UpdateTimestamp
	}
	if !IsNil(o.UpdatedTimestamp) {
		toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	}
	if !IsNil(o.PaymentAdjustmentItems) {
		toSerialize["payment_adjustment_items"] = o.PaymentAdjustmentItems
	}
	return toSerialize, nil
}

type NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner struct {
	value *PaymentAccountLedgerEntryPaymentAdjustmentsInner
	isSet bool
}

func (v NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner) Get() *PaymentAccountLedgerEntryPaymentAdjustmentsInner {
	return v.value
}

func (v *NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner) Set(val *PaymentAccountLedgerEntryPaymentAdjustmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentAccountLedgerEntryPaymentAdjustmentsInner(val *PaymentAccountLedgerEntryPaymentAdjustmentsInner) *NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner {
	return &NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner{value: val, isSet: true}
}

func (v NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentAccountLedgerEntryPaymentAdjustmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


