/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListingVariationImagesResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListingVariationImagesResultsInner{}

// ListingVariationImagesResultsInner struct for ListingVariationImagesResultsInner
type ListingVariationImagesResultsInner struct {
	// The numeric ID of the Property.
	PropertyId *int32 `json:"property_id,omitempty"`
	// The numeric ID of the Value.
	ValueId *int32 `json:"value_id,omitempty"`
	// The string value of the property.
	Value NullableString `json:"value,omitempty"`
	// The numeric ID of the Image.
	ImageId *int32 `json:"image_id,omitempty"`
}

// NewListingVariationImagesResultsInner instantiates a new ListingVariationImagesResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListingVariationImagesResultsInner() *ListingVariationImagesResultsInner {
	this := ListingVariationImagesResultsInner{}
	return &this
}

// NewListingVariationImagesResultsInnerWithDefaults instantiates a new ListingVariationImagesResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListingVariationImagesResultsInnerWithDefaults() *ListingVariationImagesResultsInner {
	this := ListingVariationImagesResultsInner{}
	return &this
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *ListingVariationImagesResultsInner) GetPropertyId() int32 {
	if o == nil || IsNil(o.PropertyId) {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVariationImagesResultsInner) GetPropertyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PropertyId) {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *ListingVariationImagesResultsInner) HasPropertyId() bool {
	if o != nil && !IsNil(o.PropertyId) {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *ListingVariationImagesResultsInner) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetValueId returns the ValueId field value if set, zero value otherwise.
func (o *ListingVariationImagesResultsInner) GetValueId() int32 {
	if o == nil || IsNil(o.ValueId) {
		var ret int32
		return ret
	}
	return *o.ValueId
}

// GetValueIdOk returns a tuple with the ValueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVariationImagesResultsInner) GetValueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ValueId) {
		return nil, false
	}
	return o.ValueId, true
}

// HasValueId returns a boolean if a field has been set.
func (o *ListingVariationImagesResultsInner) HasValueId() bool {
	if o != nil && !IsNil(o.ValueId) {
		return true
	}

	return false
}

// SetValueId gets a reference to the given int32 and assigns it to the ValueId field.
func (o *ListingVariationImagesResultsInner) SetValueId(v int32) {
	o.ValueId = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListingVariationImagesResultsInner) GetValue() string {
	if o == nil || IsNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListingVariationImagesResultsInner) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ListingVariationImagesResultsInner) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *ListingVariationImagesResultsInner) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *ListingVariationImagesResultsInner) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ListingVariationImagesResultsInner) UnsetValue() {
	o.Value.Unset()
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *ListingVariationImagesResultsInner) GetImageId() int32 {
	if o == nil || IsNil(o.ImageId) {
		var ret int32
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListingVariationImagesResultsInner) GetImageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *ListingVariationImagesResultsInner) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given int32 and assigns it to the ImageId field.
func (o *ListingVariationImagesResultsInner) SetImageId(v int32) {
	o.ImageId = &v
}

func (o ListingVariationImagesResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListingVariationImagesResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PropertyId) {
		toSerialize["property_id"] = o.PropertyId
	}
	if !IsNil(o.ValueId) {
		toSerialize["value_id"] = o.ValueId
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if !IsNil(o.ImageId) {
		toSerialize["image_id"] = o.ImageId
	}
	return toSerialize, nil
}

type NullableListingVariationImagesResultsInner struct {
	value *ListingVariationImagesResultsInner
	isSet bool
}

func (v NullableListingVariationImagesResultsInner) Get() *ListingVariationImagesResultsInner {
	return v.value
}

func (v *NullableListingVariationImagesResultsInner) Set(val *ListingVariationImagesResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListingVariationImagesResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListingVariationImagesResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListingVariationImagesResultsInner(val *ListingVariationImagesResultsInner) *NullableListingVariationImagesResultsInner {
	return &NullableListingVariationImagesResultsInner{value: val, isSet: true}
}

func (v NullableListingVariationImagesResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListingVariationImagesResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


