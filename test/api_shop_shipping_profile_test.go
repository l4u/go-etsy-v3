/*
Etsy Open API v3

Testing ShopShippingProfileApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_ShopShippingProfileApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ShopShippingProfileApiService CreateShopShippingProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.CreateShopShippingProfile(context.Background(), shopId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService CreateShopShippingProfileDestination", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.CreateShopShippingProfileDestination(context.Background(), shopId, shippingProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService CreateShopShippingProfileUpgrade", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.CreateShopShippingProfileUpgrade(context.Background(), shopId, shippingProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService DeleteShopShippingProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32

		httpRes, err := apiClient.ShopShippingProfileApi.DeleteShopShippingProfile(context.Background(), shopId, shippingProfileId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService DeleteShopShippingProfileDestination", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32
		var shippingProfileDestinationId int32

		httpRes, err := apiClient.ShopShippingProfileApi.DeleteShopShippingProfileDestination(context.Background(), shopId, shippingProfileId, shippingProfileDestinationId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService DeleteShopShippingProfileUpgrade", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32
		var upgradeId int32

		httpRes, err := apiClient.ShopShippingProfileApi.DeleteShopShippingProfileUpgrade(context.Background(), shopId, shippingProfileId, upgradeId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService GetShippingCarriers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ShopShippingProfileApi.GetShippingCarriers(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService GetShopShippingProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.GetShopShippingProfile(context.Background(), shopId, shippingProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService GetShopShippingProfileDestinationsByShippingProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.GetShopShippingProfileDestinationsByShippingProfile(context.Background(), shopId, shippingProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService GetShopShippingProfileUpgrades", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.GetShopShippingProfileUpgrades(context.Background(), shopId, shippingProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService GetShopShippingProfiles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.GetShopShippingProfiles(context.Background(), shopId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService UpdateShopShippingProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.UpdateShopShippingProfile(context.Background(), shopId, shippingProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService UpdateShopShippingProfileDestination", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32
		var shippingProfileDestinationId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.UpdateShopShippingProfileDestination(context.Background(), shopId, shippingProfileId, shippingProfileDestinationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopShippingProfileApiService UpdateShopShippingProfileUpgrade", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var shopId int32
		var shippingProfileId int32
		var upgradeId int32

		resp, httpRes, err := apiClient.ShopShippingProfileApi.UpdateShopShippingProfileUpgrade(context.Background(), shopId, shippingProfileId, upgradeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
